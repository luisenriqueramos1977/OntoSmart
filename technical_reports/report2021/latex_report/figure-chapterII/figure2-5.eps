%!PS-Adobe-3.0 EPSF-3.0
%%Title: (figure2-5.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 08:59:06 08/31/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 538 348
%%HiResBoundingBox: 0.0 0.0 538.0 348.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Administración de color de impresora/PostScript 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-08-31T08:59:06+02:00</xap:CreateDate>
         <xap:ModifyDate>2012-08-31T08:59:06+02:00</xap:ModifyDate>
         <xap:MetadataDate>2012-08-31T08:59:06+02:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:2D453C5B39F3E111A38DBEF134D98B4E</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2D453C5B39F3E111A38DBEF134D98B4E</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8e275b39-635d-43ec-bce5-6fedb3e29b59</stRef:instanceID>
            <stRef:documentID>uuid:3f701de4-d41c-4209-a572-b0a26b47f7ea</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 538.0 348.0 rectclip
q
0.0 0.0 m
538.0 0.0 l
538.0 348.0 l
0.0 348.0 l
h
W
n
q
538.0 0.0 0.0 348.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 538
/Height 348
/ImageMatrix [538.0 0.0 0.0 -348.0 0.0 348.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#Q\03)?U!a!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`UlnE7QUrnS#s9[rp!/b]m?V<a?i,dGUVG&cifF<0/QN)C
oThkUo:Psl#9rWu=9U;V!5T06_%#)REo3V8Cf0>%F,/T9K^Web96eLH[Z\FK>t3`7
qMin]93G*gp:9(<Ja%EF)9DJk%up:rrr@Ul,OP4Tj7%5pl52M\!70_+?hN:'q+@[U
XBce_AjETq<7fh'!)V8sF^SV+r74#)4s>oX^(JA:#(s]9_&jc\p7mH=1-\kh5Kr-K
gZBt;+8@!gM<fG)rbn]=rr?<0VLD#q,a%&HDoGsO]#UgnGC9l\=oE]hrrB$sW;X?2
T?P2c`7XP:eMNEIO'ml/b!3:Ve,C:$^C$Q^/ZHEi[X$&m^X]+Vm3nq[6a6G&B=UIG
XIoApdI<jEq)$j;a8O=+p;9,c8BE/FYko0=F7u?aepm+7:WA.h!9B=93mcnFZi+W'
]"j2d<'(Vq>5(6r5I>RLrr?dgSaiPonlhC7HLUBXrrDE<hu!#-&k[peX$+W<e@O+X
Q8UQ!!39nirr?&%:]"e'2sKtoJ)]m+^Zr6T8IcU2+,[/oA303uo=-eso*fETrW`*G
&$0%fIldHU5Oc'_ho)f3e&h,QJj#1KSg)mhXE:N8X"K_\%IFDg-!P/RnLPj$`#2[c
A)l>glBu;Xg)]uU!U2a.AX&(5NCDBiq?<gEA%>YQm.<k%Ht)/:r?"*N^F)-I5O_^c
ntJ&fY1*#]a2oA<en]L*e[U[V%rCk]4FRIh8Ro63B35$^VnA&X`j)t%d<DHb=nR]L
&fYtk)9;>h)!\jP!'_/+,W^D(nIFuU8ekW+m.DfSCh_kP+iEaUBrP!%,a+CT8L1,X
P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4ShiUAcB&&:`;[4q#%3KjuQ?DoUmHL#3AcDbIT@$U:Hc2QCJr#7F";1q,]!%Bk
LP4LZG?7?&]tb<N*0lWc!8=u5ddm>@+7NBbDr5?lhfL/7:W(4rqPnJ4H*Qr7TC'?b
E6$c4Mg5+'_nN>_FQrReAGB9ckh#fVOFH>b])K1$o^8ah^Ulj]8,iR]A.SMbaX7A4
FSg2LPLZW"R75il52='U!"WLZJ'8j9pa[(X<=RVK)d@\,"%V:HP'*Hi,a&I38L0I`
P">[$4Ao)EA)F%"?1:a7<jYMe5k0MDQQ!<]?aZOuNp(Rip=Rb<[$W!%aqdOTd(2[`
k5nfn".8GC>%qhVDIE;od#X'<FN.(n_[N/f98iAK;AV(30]57g82\ZqZk<TufiYnF
kn]:_iX`i%rbE>G<hI2Ye&>:=CUW\a[u'I>=<Gn\rFK7WDU<K'8H;O)V_)lK&b8@`
.Jai$G!#+g$LU?,3Pa3R7uSQb:e2$S1!D?@61[d.l+Gg*m5gC818AmoFubQ?GbbZ`
.CuF^iK!!ho2<<"e605._G$\7InFAIIk"OQ1kG"9DCfuT72moUpO'_"$6r@Y<0Bfu
V'KKd*N8HgKT\o$7s)BK5La7NNM#G`-Du:bQD-7M;]kigF0#K817Ba9kI4r`dS##]
o1+tflT+V%R=nlO2Ia=%rr@VbA%sM$NRk[Q>J3)dCMj(O7;URgq2a60A39>Fa_o=[
fkYsV"2?;i&O$T4M",Z:>k9YP`Rh!K>Dteo3;U%4R:MHN+W[+`W8hTaMCr<!lpE/`
;uPTn.An'JW^Om5*Mero5,j+*,8TFT_s(3MYA_C?LBVNMX*ke%Uln:q.3t'J8kC:k
;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;<R'egI6OoJ<IpXH@sNFIK,?Hl
Am:hVHA7[qg">KZSIW_[phJB/,s!b9nj/?ISo7QDl0S^*d)S63<^"cQoiTme=giGo
X-oh:6O'=b'(N]a4KA^&J$`0pYd(H)I8-1Oo^6uXZ/=,ZUnaiD!TW=LaI`[;3cuL:
^EgEDiVjW9mj%\2qCVLHBdAg-P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,rQh0Z2c3*
/-67L;_bZ/i:jlJ2%=J]!_?Bcd8nB_(YEQ^P:FhD<,6W95GWWn8GoK^8J-+'X%eQH
%JA@^Y8mA8aK_pn%/MOe&<]Yn[9f*MXjt$#eE;RLB2g80eqk/"a1s)KQ$B=\CRi9o
,TdSgf%BL&E?i8tUl)9?+"ci+g/qkd)B_A)m&mTO3NO8S+F[:ic)E",f_3(qJrOP\
ZGU=T"&C/Vgp8Qsh(GfOQUj:@i1Kj$KR3Adr7`<+odbC(n#:7>W!DZj&04-APkI8a
fOOuRq\\[S\YKc\:X*@?^PhoPA@pf*J(6M,T"Nt*_n>nj&,Z2ee@QEAOm_Ss\Z`Qh
Bp%D.Z@?cFgBPupN$$!7qf;]:qh";6Fe@HF`uljo`uaZS9.0GprrDcshtH@KrOZ]i
)a7:Vrr<Us[k>h`O*=_QQ9+Ve3tCfMf^J_6OR)\6T2%a;2&#ui;G(1,m&hc2FHTT.
?0Q"d>&4,NDf=`P/U^Qp>GZUEPMs.Vpqe!rF=FKM2Ngbc2<%_*LPn\fOZEeH8L0I\
jC)NZ_8r]<_s"a[?Jk%]Yi(tZokZ;FpC,3"pai0N"8Ol4J(4[DP2C[eQPZg`h-e:F
%`?@M<I_Jtr^6[C^-u_:CMBgFbu_0Y0_3hG8)f)*=ku;KRs+X`rM@R]bkP7OY%Q`-
:,$k?bp%SmKdE:Df!2Mt(qC*!-;icl?uGuEMg*Qua_3"47dIkqA^X-q'Vpm`,q1+&
8P2Q"P#@H7,a>*f8L5f2Ptn%&Z+>'df95=0mAcH]el_AF[3.+fXd^tj.qs@c)V0ad
M1>To9#eKEjC]-57VEP+m+Y%:rj9p/r-1K4S?AgLDcMPA%'p7p=?I%qr:bXIhLIl<
%0093!PYK$=Clhmf>k_)M[i+4YK1mIaL(A\nd"bVOB)uc3=8>'P#@H7,a>*f8L5f2
P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"A"+WQ/GQq\rH=k<+K[`?d<3A_Yi#3al$#
8cAGVli-rFqO`jL/^<RK+%k\U2#_>$Q[bV&quV,`,N7dlbRYM5b:BR(m;m&]ml6&_
]W*l4hO;n.=R:ff:t#@DqHlb_=W_1I]7$@-rrCo_Rh,HH7N)ON%g:jIFXp3Sco,7_
17e@c'6!HFYRgR]h>'lSS^jk==4^"4VS.K)Ye0HS,b-"id:o,3<Y&cmrr>9IID/1f
dJ#G3(rF2qI3t0;iOJmfdZej;[R1h8N7!Uop])#(Uln8H8L0I`P"?pq,a(_J8L0Hk
<0\8$>P*7\mt_-=,a<rJ=Hb>80_hqUJ*;uM_37sl)0ltmDr*\D"-h5*/D8N6]jK`5
]QdPqe,FK&p`m,Jgu%?UDZ7$S%j0rG@9$3"0T#"U3=`3_?#QTD6X=o1j8$0:=oSJu
!F9K0p?l?!C#HA>r"hI\E/+E`J^bi%)S4b>*5<NN1q9m])L`!j&Em1(S\rpPY\WMe
=!*d\PgS44Z2XgeZVSDBX05tLDHe3=j5.U'rrBMI,O\>dj>pY2i@nKh)"_B?Buje#
@FcIOpl>K1:&R_]rr=r_T85_J4T:qWr.goA4H@-j_]Hu</?QbU4?92KIUP9LqAiX^
L@uE[`9J'VEGQ-c_qK3R&+7-/:fWe,hh3(bbJpdHA[F_5T:A,h`pi^"<P/gI?Z<jH
C`)tCrbR5`/#0dq4oYMFF\J#M;5d_Gd(62%P%*MuP"@)o,a(bt8L0I`P"RI.oh-a<
FSl-jk1D"UXehZS/H,a_+;/?1O>ST#QWEu6`Z??/7VfrN\V@B(^MCG?nLBPW+/`VS
Z<hQ,lk'&biVT\uRboDB9M4gli#HR=_nPH/X6b?)3;u4s*D-<fe*U7/48k%.,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTZ-S$8KUNT@`[LVK2n,p3m
8QC/`To"@+g+8"@kgnX4h=,+.A`Ru=gs9j\30^')NY?Jhnls!qHE,Lm>su5rQb2Ka
j14UQ\E]lM53i\EdoP#T>Gu)sN5:?Rr;.Z2T7_TNIhboKost(0`RilDP1.)AVa9lB
8Orh#"u8d+9%Gps]-=S,F(qJ`fjTI&<E?;&p@R,UZh^o[0uUjoA<%3XZasTL&paZh
l*O^a:EM?ifQ_*6Zga2?3dnI!I>ZH%ZX9Q-doB@<+LdGSpoT"OCT,Ou]RMo\29tuK
RS8:k]<H(dKT6ZtWeb\sXjpP=TCeLD:W+bdI4jkKHL`-87?J^5dR<B'j^GVGWmPSb
eWL*3rr?,%.5rAl1S'>ET7&rVe+b&++%[DObOSF/e/p*LQrm//Z-7!9!ubM/*C'Wh
/dntb^?3'/5homkchAqIPD@QPH.'pGCi>?]b+D6(Kq80<i8eH*;BoR7+14EZ^cdN=
Z-#WnP8V($A;9M,/hdOKW>O2X>-e4\>HI]j%b`:G?R5ONWdl5YOpKmV3a5gL<^lg8
V7-bEE$t3'G>#?oRrN8J-*@#1ZgJpg.`YHe!0Zh8+2B"@;delJL/,#prE)pR98(I]
-VEa>UVnB]eu3P,SY'nuNXR)-dR<T*\8<L9)#KWN9FMq[+BS2#Hq2++CHe6&XFD^A
A5%gD5lI`S![GpCP"?qlW_"J!;NaTsPbaI6,q1+&8P2Xt,a)%PcmaIFM"bCAnnKih
opPGJgoaT,F"$bEe1YJ2=p-g7>-n,6!_=/bDNQ,$G4BW.F'7d;f\6E&5]YcJ2!Pd\
1$HcYdu_B=*lkN*&:5/<5)))Wjqh$:qDQoJ]R9VSe\$@;PDp"9/bNoZ!4`gTE;oos
XF=!@369Z3Z4)9IFEI&!Q2N/V`p.J#ija`lR-n*>1B.@4n%EUk3e`I3j5n\!KpP_O
M%JgZ*^U>h?(DSpa2i7M:3d;Kf,6R/nAh-np`@Qq6M2;kA;mR;SqSH*aH2r^]h'K4
8lA5'j^chqO(ME[[T-7!hL'oICA!%QE%5^,m1s;E'$P[6'A`*U96i"A*[&F3Mk"Xu
e%Y^MoUb[3iSZd@iA0bXD!JR5gQ@X!@h8>Q7]`fRh;2o+PR\:2HEi[QYLoY68JN["
P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t3L;<kSRa'eQ&6^sqJ"&WFr
=lTG]aGaS=BHWB?Pl3tMZPDX>'r(W)eW]C'He@cD%TZZ.qec4*>Kup9ERClY@s\@O
;dBgb=QIRO;W;sS4j'4^0bIlZN0KJs-S84f,a+CpA+^DU509'd^57pXLH"-k1lrhQ
FFm!,k%8`#*U6LXj'^E7f>n3:'jQ]UEc#sN*RArb4G"JC#_6isF/k1Ue"`[.=>\ub
R+Jph[EYkrqB="Y*_Wa.)3E6-Goe+!&5klI,4t]?:D#IegG\n_E6W_f1X`G2%:mdI
PkZ-__li:+XP2EZ"s(1nqpdO5&p,0DE(>\=U:?3QF_t9*:+UI%`Hto][Dp'kr#o'?
m*ESJ_l[W;]&.N-!2CqplE(!c"\k'LF>/.j;kkDbIaWj!hODV<a)rBBI2_Ea`0VSC
l5R$M?hCPVjMlcHANPFEiX\e1N]">rj()Z1reQ).rNl8IrmS%kNc#:8a"@qh*:;(5
M-R[+8,YNOGK&WmeA@!7=*F$2Yp]+9ljqiOBg1e\<:kDu;N@<0DgRl9Bk[b/Egb`j
lMQf\&qAm'pb$ek:uRBU+Jf'W![dspm,*MMH__"AkanW$%[T-9-ho%eVh=u4renP^
.Y:Qhm>gDjn8Ed*_Ys4YR.'s1J(f-S^44@Nr^BXT05Pi6)h7RQ&,KE'[GUcoj/Cn.
nEp&9q,Vm-P4lq=EVMS3c,4`Aepk%=)eEp`05:1m<]Oqk/I18L9ba5hD>So+hhnrA
*QTZ\0iK%`2`(<5E;YD`59[d.qa\S[J(4Ue[T1<fPa56h1Rn@UO8ca9nS&8gl?NL-
ar9a63^3iP3"KQi#=Tq5]iQ'N!'8jarj--`m?M.^N-i=-Z*3^$:Y_F-,pGo+P*+<K
`3A-LnPe8ElT3X1opaV0Ks-3[EOqV]O)$m?[`,cMCEW1<ml/L'+koPsCOn%ALNRdH
7kj`QfgJKKpK\XRpkO3mjZfVQ1SnWp],KKZX`9^Qqu`#Y9&3a45$L(=:?ao:)3Ef.
Z+:<$l7B-TmH,2I7-YQL<r>Y4qedPc\hjp&kZZjk&&hSm!]@/Gim.o5VqC70P"IUs
=?Tj6g)WbU0tQE)mE!E=F3jGXTDG>R><,h$ioAdWBnfO+4ib[=<Y%g*_2J#VrrA\7
EQG_=?`7o:>6-r*hHcGkll1d,P'YY(P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-s
P`eT`V'M5)e?`B.nK!]\kNL'Vqp0GF#`VP'AtN/i2@'6+_KO\(-L41s-6Ec[40kV]
9W#'p@N+))N>4L_QWieN=A/%2ml^4@`)Sp0_C:4;i[RMFO[>4&,a>*f8L5f2P"A8;
0d34#_uMY?kQ7Gr<8HrZDlNa:#jiN#mSX%UQ*Yk"!HBdu,k.g:eFAu#C#+,kqE@-h
3[ucn\F.Ia[.X_oO+ToYps:CIIEL#&a^:U.B@5Btnf-EZSNd5^1Xn4%T5":/M'$pK
8LK=Fd:jl-f!V4j!$251kp2-#P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+
P*D,$,c)p#Wo'kG$1X"(od#VsR/DhkRCV],]'jupk:6u+=0kQb%j/J^KDoZ$]iRc-
&6Eif8rVPAK=88,rr@&qf6tUY@Qf[S6bmob'!.%nI4KfG_>XqhIcka?ELrVp:V3NI
/\.?B/M/-iHZX=63-.lQ4uZHH]33W8dk:i?bA229@lWda8+KHfa]$7+UEKDFCUa6]
q*3Cl'eG)%D9/MI[*1Arp73:0]UT[VNtA&"18CW$Z-@V_g1@E"#jr%__YU%!bc[IU
K8[Ibm>RWb-OnVP^hN@DWh0=Pi9PL<iZ('e%QDsOn&;'"[-O3..rbLgK5]urpb>?=
l?4,\Zt%MZ\CchRqbM48ngfSgMMN;Gqc8nkrJF/lP#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a*bBP`d&T37Rs.4*>B=ZbZL8<e"?<%/O+LHl@3YeB0UIh,k[qn$R:8
:Gq)f+!YWTpbc?$eh3+FZ1%[gDa4!C\_9*P-e5cOZ-U/9g.6+Qj6b?g"RK_CfcX@:
WFEsm;1sr&M(Y5i5PE'EWNc;DO8JKdgE%4#q73L(mQ]Tig(o]IQp9YPIu7MGQ>c/7
J)#,EGlHd=CV0T+TC^+t-19glq#.2hT/6IYJ)Zed-(Fd;h=9>#GYe3EGK53Tbs00#
G9?:om8;t*Jc8.epncA0:`X#:o\)K'5PO7_ea\!pf)/X"KVQQiqGI,Ve'$kmigB`G
#%,3XKp.^$/UjOoafQJJ*rprj<rs]!D3*OhL[\H=CTf5:O_`Y]'sO='hsW_WiWP;#
N^1L$8!lqlQXu`@)Dd]-5)B3IM+KCB:BVbj:8J$#@OBTf8Krj6P"@)o,a(bt8LZR0
*[QbdLPnG_OT_p\+p]kj&_O!5F'uKi4@k<#9-g#bcMAZTq?]iQ'U!Lg!!rc1`/]9Q
(:g:^#X/AX$<\X;77p,siN@0TJkqJm'!b(XH?KL=Ks''%#=44AUo#RdOsj4",a+CT
8L1,XP"@)o,a(c/p,9api^`)).i?t5A!((p0<9Y<qG$t(M"<o'l6,SI!2LNW5-#d2
I:KjCT?u][Ri"5)CRTAF!'%.3H+-/^IOACbeX^J7(05edNH7`Vpk@r^[g27!!5ZG&
cc>mcn@uBnYLi)P8O&]"=<BI7Y:<\*fCcMs(Z:,@/?m:.U$3XAbLH?Q,a(_J8L0Hk
;Fr-sP`eV.k-:cO+fu`p`W5h!Pe'LD,O6.AW0ZK3bBWDFpAEe2C<jSsFZ]5o=,PJb
4\,J=LAhHNEJMb'r;O]@>cqo#c+oJ!@J665OQ[tR#BHeNep:X_gLa(dLZV\,GML;F
eY2dDG#bt]+8A>=5Ksbs_'ZRk&AT2H!/2,tR#QY]K6&-O1*>[,)#-VNIq,ftelm=<
`jXb``C'0ZpaXj;m\sf`ZAJn\X?ZI+W$J-#bg+!7V>b>1Hn1PEc,Dn'?hA%goD5;u
c=U0@Wsu.Z!`aHKgTB%0DtWI<^P\1GLGhNr8*Qr4cQ5lKL=i3m*+,8@)"]cNf"pna
?ie9>"HlG(S]NG"0osHWneB*l78H)V5ETSUr5F09$VA6W970#IHHaG/AYAVA[/@:+
LK$hh8L0h68L0Hk;Fr-sP`eT`UcDu^6,1.le*uPq+@&&ajg:J#&'Q3S+j'k.;(Zur
COA>5'SE"7UA$V)8kCH98]PNWojOIGL4;*@9?n]JaN/;_ch2fQgkab?8(1sRrDOf'
!@9":XJ>EkcW1AM1R+O-4s03U5I%ZPg5j\mB>d@=&Qs6WI0YOT$I;CL%j=ReFT.Lj
nnR7\,Z"#W8FW"]`)l$b,dU]d[J^>mjE2Q%1G`hc=MWnTh%/:?d,qT+Y6j`5Ab]Ug
Md@GZhAZA4]arZMT2'QNN_%u#$oU,\^#0TF5-X]1/LMUsZW%J!lDO[_mF_m4hcdq7
c9AkKeU%aDOT\G`=L[SX;6[Y>g2\Sg=RfljSm\?f%ROet1cTDl*t)K8S72I$9$\($
pis74Zutf!PjH37Q\=6nQN.&-@$l%c<=\'d:[6JSF*CE'a*?r3IRm8L+//>>N)*H?
k2m,U'ckQ$Yo:7::d2#Bf$'V&EX3BA<blg@"/A9<dSbnn``uC3r@7;2l6@nB)OI'c
kLIW%dr=-m1'dH@R?#Dfg%Q5PT@2V(>B`lEBl/LOri=9B#iA`+>n"^:=RQc4/TUSB
a=h`f>9>(&lth-aF5-"id/)V97(M>Irr=.S/gD%tMu@4ErrAdn&f`"(?hq$rf<Q7m
X%"*oc!ft<UWu?ihcmkWDu.pIMTTM5ZRN@eF`i9'-dC(?rrCU[SUXN%+)&X!LKCa_
PA<IH5&&M$cPS"/,ST44/C$&FqEa8lO?94K@bZZVUN(!e!;d`W2=h++]j!9&Y=>-[
BI*K@CQ?,H$;sG3)E6\``K#I+/K/DKlA,$/^Z$:06H@3i[k?-XgNS_[f[/$DP?,0C
4"IKuhbicQl<F@0!_eXhbgpc+pSHNVETZ8ql+>qUU[#rc=/rh,-g^i@_+)fS;srJa
KDH(*\_F'>-i)mT(-S;];QBI#_]\he:Zlmf;\J$I+SpfeDP7\&X:a\KRrCDYlmc=^
"'TOrPURp(54<3%b07ih:!*)!%H>#OEt69<:;.ZMiigg&l9A>7_o6[+o\<^Jgu-Wd
G/!2=jZ\fhl!WUpQJ5,:D6nY&h6*m@7#<\Uab!ELB2U#FFm(K,Q]NJ&@nn)9q_W'P
3*FM1FKDrWF\OMGg<G>eId*$$f1'TQa$=d.FtPai:VZNG8!_gYS=/!J98JdU+@f.E
nc=bY$D9]^5A="e,c"P<P"?rK,a(_k8L0HsofQ6BLO&n""d;Tol%/b6W%TpDVsRb_
#93Ug9k=8(<JPl"!3':nU=7s>p^cL)5KP#9&'27f==P$Io_t]a[f)WWq)4!/rr>Y'
Q(GC:F8BJCbgOAaocFPZmq:VqIL\om`2b;#l80:f#B8Ym.\$sgag3Q0RWO]a'e(Dk
8P2@b,)f]bfetaggWQ*p/FK@dCW:_+YhCbP)EV<RfDT_Oq#uOf[jL!>1;eORMmR8L
W87Sf9X2XPVm-/(2L0150/KR!_tVI6:@=uTeiPFKFP=FCl0e`cm+9AT_TTIDPjS:4
]-6!_c`hd64fK^-cTL<oi>s)[e\UbQ(hiF/bP.p<fJX'T#T=3VP"A'r;Fr-sP`eT`
V'M3q.7keJ8lErUI4Uk&lqaS;K=Un\MQ<@Pg>%DhF^IZLlo_$V70I:X,_6("2$ZrU
:KXEU8L5f2P"A8;,a)'9d&M"mU"^+)5=#5Khc7V?CL5H@#m[aYdYgsJn#>tp-1(0i
4t7\,,\e!D[C!M:,`7hL8L1,XP"@*3!RU,0?+/;U*N/>;:nj+p1/AdtaG)8$^+A9L
5YK/$gUh@)b2!N2H=tRfrT_Ee@:grgD3TGN/cET-bJ@E%c3'q<4F0"mf>6PfQS*N<
mN7q_h9egr*B1:_/^TM]GmK;S+R1h)LbU.e6uE?qD&r^=8>0:-P"?pq,lmM!8L\MO
^aD]!PbartP"J[VP">g+,a(Sg8L0HsP"?p`Us=$`de=R\P*sVs_R>'n*V<Ii8QKWF
D%&FmcqSuOe2;#;DsKD?a9BF=f_VM+qu3m$AYX1;6gb@FZl#pOk'+u?--CX-_6?-_
WapT>F8Z^3)68P6l1/+`X6tGNr&@n#+/uF_=`_HpftCGQ*\#7%S8SDfr::0>h=Fnb
cg+k"q=pST+h:Q3?&\C.mHf4j1b--a7pV$(KoZdr,Rc64An/:3K#^GoQ+Q98mEs.%
^n[ke>,?l&3k^TZrBC>[G5H;5D]o&[ULE]_4dF=)T):-)ap_fkT2)0Y^V'RHm"Nbe
>A@PUGTJu>18E*\gDYI[D\!WH_tcUBbfYF[_f>Ro\+*a_AShi`J3,,M,tsJE0&Q^:
!eBL1P"?pu,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;k7K,A[c=I.hCjim[r;6jQcE'
ZK<(l'%_.=#;u;F'jP8kk3W'8,NbU9>1+jAP"?Cg8L0HsP"?p`Uln:q.14:B4RR-m
hBTeR,,C*bNiq+8PBRPoDSLdZE-DLdeHaQ'R^p$)N=%d=VQraQ`GkfnoAooOmg95b
1[-Tc2X69T;TU?UCrF0Z3dt'SPbaI6'e(Dk8P0U8*n.O7Jed'gJTG5_pAH046DT]a
X)P>98\^)L'`>C\N:<I(rXOFrGo6,a3?Th'8,1!2n9!)P`s8h3]JrGWZs3b[P"?fg
,a(bt8L0I`P"?pq,a(_J8LAMId4QT;cUAW%*b)"Xe,4raq!`lLRRiCTcEm*]8F`q+
rr=pkhN#mJ?TAl_hrO_?rQY?6%)DC(M.q9q0%e9mrr@1oEVpQ/YVL+Ij6/;n>OHe4
n.p_#=%d^9^rH.+6CM>N4"_*G'c>G11q&_;T;:m[IO(irfp*F4[rWJX:)d"(Ckl[E
rDmruNK!k<o#;<d2Aj$aVYK;bc\IFEf0dPiAk;3(?u@;I9c+9?!?=;M4Q7=@U</UP
*peuD'fu:T$GN-d:*"Y<Rg%X'mTefB.`t=4G&I0EfV)<m8L0HjE4WJ.qK>NC`\U8d
Z3GGGn/;\g4BqX<8??l=d.S%5\,t7l#X-&V+:pig*^]%qES\uX05R5JA%k0>EW6$d
BE!dO'"neR(._K>*+$6cZ`F?P1$B02lm/4>Wg^EK)7-BPc<HDu92B#4-@Z7(;-)gt
h"h7oiH=lsfC)?0n+\=WP#4/;P"?pq,a(_J8L0Hk;Fr-sP`eT`VdgsJoZSduIU1QC
]n,4mCIfF@58@N]VH6e;3ee[3[QDd`\8?:_Qs-%ag^<T@52/H.RYK8Bm"#V<MQPI=
$lic2ZukKr`jBJ&r3Aml8g&+e1`\MgiQIBS(!9jn8/!Ts!X7d<>O7*)R=[J03gO?c
Zp!N?CM5H%*W?AFl+K;@RehJ3]l%%SmG#37*"hW=!5u!(n__=/4/LPG]gj*Ma`+Mf
e$'$JqiK/AMVJC*1R)q@pLP!EbRM's4)%BmYT8kU>Ch1O98d0:2M-F12HC>RA*h1U
[isK4CPKik,Je$uf4W[]CPW40,K)>EX.PO%gREGs'$%XemEQK_-@(9C!-[5,8%Xs1
i]U[B'PG;n&ZNP%H(:=Pa^_aq>E("ANZR+?DZfR/Jd@L;.n/2cNmS:]^cL`<WS<)0
9CYPejOSd:pimo-h6k.nYJh,H+o^q)i3E:^\F+fP.S7f_P"?pq,a(_J8L0Hk;Fr-s
P`eT`V4?,K7f[u^:sLX?L@+u>+Vc8%JE$RqKR?$7-Q_6_CVK?;lH2\$<Ab4eO3F5I
#Q'\s@-4p/Pl=*k,^>S?V77"$*tV@sN:@8OA@Ramn?/il=Qd&.E<8\kQ"SXJpY5Fr
CSXkK@m7r<Ufh2t,Qj_5rr<4Hm.gPEBDJ>"QE2E$@q20W>gOP[:*$jhH!?Er=8U8>
_Hs'g^>HRTDmJC&!26UodJ_18Ri$->J*)g[8)3TDi:1i9>)2:Mmg6[R5LMLZ>69Ze
'smhcrQ7Eb*&J1V$%&6Ni:1eMHB/Q.J1'mk+QkiMf42N'GP<](Jl5M@%qT\b**&6l
UQ9']TtchkN'-iaK4@-Iq>UGo"_sig),CNZS'uCRe%(G:UIkIcW[Nkk<I]\1a8&8>
rrAbp\rn%'\nH8&f7A]SQI=IVGI[V>Q!e8JBKQ>f+Jg?H(pWg=EU_V$/g!VC7^Ms[
i$>0qZ'@#r@tRtA8^JYjFR/dn=caXn+!HEoA])jg>POJ)$_jr9[jO>V,51<Qa69Qg
a_Bi3Q")$9MshZFVa8FDRk-V/L*+`cTC.CQZ?2/]aV].b@Q.6_6K-=2^I=2["#@l0
)..,]+.Vf8/rlstVRG#R6Q!TWerB_K!"aI*#!Yl&DD_F0--pqGF525.gj>3cWmd:N
OCjGebt01DC?6_(8L[7aCL5H0JEF@-#>d_V;Fr/sB@]h7Ob8YZ@5QeuNpg#W%:;O%
2NQ^rO7Rf.,-)T(D76c&E0+.s`3)c!#M$F@SGoA4X5),rZ8!<U`V"NOKJF'[&)J6H
j0NN_k!q!Z)1OS.rrB'Gq0-gV6_aF_)8;k#Ta*mpJI%.<"DDn#JJ%s8@-g4C8L0Ip
P"?rK,a(_k8L0HsP"?p`g<JnAB/5cVf!Jqr@s6.m:4D9sFW7BtZ_s+soiQDIdk*a8
<>%r\h:g1i*$RKiKH;6t)n,\c@d5ZeK^*9_VNTjhBf_f46?dRbTinQ;\oC*EEM].0
IV)W,8F]?ahn.mRGQt%kC\$.B*aP.9/BY%!4bSn;_3#Z7l5/7BMr/ls%^F!k%O@aD
Kq4S"7uND@<Ps7m8L0I(`nIK(].I]8oBl#sU[]t?>$^F&pDdVZi9pUF20C0q+Tu#<
//u#W(-hP!Ti+snY.IoH`eTTV'k^p?l]5ImnfR:<ho^2*l@TdB,iNlQcIP8Zk'MmB
Wb/r*q@3bgMUg-H,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK/W[=,a/eIXT^j,YIL2ji
_ReH.A%mj+-iJs-!siAC^#V6;rAP2knlt1VEqi>LPeL#iZp#YZ7g';])p9C3h$:-U
B#Rb*MO@+$MZ@Gd.AW-<i2Iub8P2Q"P#@H7,a>*f8L5f24#/4[`K(HUL@XBoB[m`s
I\E&**urk\rY$O/5#'SH!^PX2J546R(](Rd3379tUR'H/+4bY`$V%:O>J8_a4!X_6
^SA"#DPuVtSQ/ZW"]Vb7Y]/.n#N1ti!Of%`1Y5,@Ner2`m\=C6+8\i"O7V`!r0F`)
;iOnW*K@)-nCEC&:O=U+I?"bP7(LSs!:_>7['q]iR)L\t_;X'%(0WgL#D)fJnk>:)
eji1q&2XD`]-As&@!&n:[nF"H-Fs6JrTEr7mopesVdoAa4W4?@ESk>feb2,rpR^JB
',)GlL>uaI='IWda13S.4t,\6:Q%u+iu6OLP"?qLb"3kA;NaTsPbaI6,q1+&8P_G"
I]1ZDCj("uGM+d_/d'd>r*t56j_d(a55tVgF_XZ/]J\kUhr`P[]eKU>%i[EnA*)4p
Wcp"=OG'>Uo6n<%[@`fJo()WFnO*$\hbMLi,e#RYVHH=?d;JZ!p05WjpbL,bc!app
_mf".ot)!g_efr*rE&q1Tp?Q*]gK^43gb3j3N*V-,Pj4FloPs19?ea%dZR0IPbaI6
,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0Or4#*\G>8R\FmLS.d&kPf!@$1B3
Xr^C5&)^:?7U%l_C`Y,grQ^+B,XdML6^m<C5FcMirjt`!GYZkqhaPB=""QeLpt5:g
3neuA?bmdJ"E:`r<Xo9TQsS,(\GlOH:cL*M6KA$AKD?Z3+H@(k,r:CB3-B-9g\pAr
).WR`:Vm&2h?#f,\u>=3P%XXA%G"K^4Cu:aM-_i4aC)=r%d,S(SlfL_i_uNW:ZWA2
Rm&A)nk;QkYM$Ms!0a'Sa.iL<q>h#nCVGl'Hr[a=BOMFoUF,/a!N!Vbq]]\8YBluM
'P'K/!._EU!$\OTj^L*8Ze0*UF$CG1mPk6'rU]W/#=NgHFQ,.DpH@D/a*f/5+o8AA
!'ubI!,U?g!0L"uC#^-XrrCVUr)J^]B/&+t-HSDD1mC8KGL==M58F;"!*%mP.-aS(
3*(NCb]!ITV.7#8*lU]"N"3#ZqbL-TYAF4=e?kr/Uif1U40e,NX'YDmQD)80e0fuV
O<gs;Ticf9c*7"E`\[-HO^$0nE;k(3^]$.3&bc@RLUeK`qf6`DaJ,m$Ch#XS"O+F.
In$=$r7Jorr9%o)I[gfdDs6uh=6A(jqtW`Ijm3U7pFZo'5HA)h%]jiFp:G[dc"<T*
ZX6".[EQb$mhW2YBDiorijDZY3@&tg#XffT_8F/4Wm]%NG;OZ-`Q(r"OE,C3nJWF0
nC$\@dArdb)UTh-l?lO9AR?ZC\ni5V[FlEN'$P[0H1Q5lO#!<.?E)G^41]SimU5*<
Gn!2lM-@Dp3tJ7?CW3A6G-?2c4m0fP1.b1q&b.:^-c+-KkdKS9\K,@lc)5]/N7O::
(XLQSa$m34)@dFVUG=U\GQ;QUP">eU,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NPq'
nT/D(q/nU\h90+M,:&StGoY_?rfK,2CY`)RrLV&&J$S)ho*Zbt4T&DH*0rIJ*<Rnl
&U3nSB"*/X]bNlfC;#A&f\782>4<LBaJ)@>o>F;BA+m+HT/IeRnk(/$:9j[(k;J[e
R*)SS&,[YC+6RCr`?r.!'#GVN6'^,+omO5>l'K!r*bfi_BKt-ppAY,'Kp.kO=]mBB
>qr.!ahX''/n9(;IOV1]a"N`HGS]'u/XAWHitCm=iVkGR91lpXJX7a]kIsG;FBD&P
Y1iB#B0kgJrr=tR/ftm1Ih:P+/m;b"5DSCSLW+OaI,%Qi(-gs973lY&HC\Eg@G#tn
/[0`PFK4f9e,FWY<W<%9a#ERB_hTAk-hI8(j3D]:gFPOdL\%B7-oUoBoPA7;Ke]bL
V@Z5TL1)LR@LnU/,b6\^;Fr-sP`eT`V'M3q.7keJ8lA70(H&ruJakFW[SfY/,9.Qn
)Gbl=Ifr4KXo;dfXo>G?O1]uVL,kg!I`=Bh(h*#HJH#TT.4&H;Qdr57351dM[I%nj
2\fr>X1@]uHQoJFKl&J-Ha\UtbN(edo.1RMQRr`s1B-Jbq]+]6gKf;'m;J+JXkLLk
i=0fZ])MaSm>_"Dg95#YljQ\Rf_*gFGVg4dS7JOX=8/Qj./g!EPN)cCShoOc?\#o9
jsd&]/,CkU[KH?dH>NT]3Uj6"om8I83HqodroGAO^X%A$K'4OZ;TB8,oY3P=Z)O)L
*6)8Dp]kJHq!\!bEI'95`,L&Qodh3D/N_eZh4XQoaX!J.,a2cl.S<<),c+((,a)&g
8L0OrP"?rK,a(_k8OglRWJ8T$ehD.-&-q&lAnRWt\#.Pb@H2\=b(n!g_#'rR2UF38
Z#N<GYPf][ND'NL45e-#6t]*V3BH>6N-67V`96<)`;RJ'$pL/5J-a)i[?l:ho(RW:
m[#$/"#u>V_Ben:FlRUlrE@UtWBZq]&%mrMI2;bBB]/NA//K7@BsRJ]/;m:#&,)&+
!3W,bAl!q^+p*p!,h/e=P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NiJ",rIJ>=&7.(ZD_Qq33[a94qDHi;1D$ZUKe5Z(60lf*iT)=4Df?@<m!si
88M+3$\8+8Q8eH[-b']VR&"!Eo6mh?&uV^;?LLUT1dAZlp-8Jq_-?+`3-^j.fp,9U
%gTI'nu%G;a4QC^a6dn``5T4]l778]o,<+1XT"()+3l/tpp=o<!3%,T46lMaFi1Zc
1Z;>eZi&!*[0bYNX],/JoOSO@=DE'UeX$gC.DfKcqc;)b5/r5hY4SL]=^s[qCWHDK
TqAB1?^l4+J*VXb!7`p,cF9b$r?nMt+2(%2E;P3%^BG/%\,bp)_aD1^p:@%!!)*No
*e=3CE6FD+:3$-O1lp1e^Gde8nI.YVeH>JXp<Br,>70&dg9))fgL0P[%fD2TE(BY4
p''KEcdOdJn`B[R5P_^"rQTQb[,:=FrbYg<!-=5"[,:eEgdqt]IdDO!T=o:fk@acK
E<k$lpW[p)VZ-XBEV4!hbdZZQ&)amZ7tMhp+7VZ]ouqoVao4$o/i`^8O87I1T7LDM
!59nCX*m*Y.l&.8Y`JXB(90rF`.!O>!n3bjh^$PC;Z8:iI]mjUbpEAif<OcD!5Ba[
dQ1BSZP&@I9*,%mWg.EHD.+^X8b6E6WiJaZepg\mIRP\5P`eU18L0HsP"?p`Uln:q
.3t'J8kC:k;NaTJ7(YbEFB*/BI6OF6q%]6FlONZ=Ra&ei;e[OX\X)(M'+6/Oi0J[`
rr>+>`)bmjbJ,hT&:Z:W\_hHd2t97$\H,q$#tfu%:,XVHAD51]o%X9kH5#ZES""i?
/?1+2r==,N-#4<loZT,+*u_T&pW2.i!:ua-"#u>&4=A7oAomN"^r=&<G^+/)?hsE_
r"5@G]#ILSh,Y1"k0cCs5L4^6J"!g0VOWF7!B^IbRn#a.eN@&W?'T*_ba3XOHiq'W
j;*OO#T<`\FH]9DF)-:.AL*F0.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7u4&?8fG$"5&G;8L10e
h$^#bG<Z_5n(qPt+2+.9$2V>qhrr`2<-SW$?9[\!X]1DqOP#e:K@._&+/q'lY+`VQ
l<<YqL:%,=f3-i@iT+gVr_!=I8KVtZ+(@2sKL]*Ve*6bBlFDrQ+0e)mA@MBY%(?'N
fDbj#4j0Ki+)po\i:/H_HBes=EkI;0!3\hDnh@$AfBK'p?5rid]ta57$_p98E-D.V
^jH%k3]a`C4D!"5GTW2EFWR.CUQnFN!3S9Xf&<X,I3pfK5YuVF,JKEXT8OV;JmRC%
Ic'Kn!U^qg[c*DP,+naP^YYUMGb=^SYPW=ShR(U(l/tEl8cJdm\,2?eRF?ZR,p2j8
J+>%8K<\Jan8cfd)!<*Hqf0C-R-3BdS=2tHEPLA<7nr6cN*8aMD84l%g`.[>*.!CV
N?>tiE-<_i4q9%,SM5,O:\irK!#6U0rA1lL*W9,brCAH3'[km6>=ZI4+9:Fi]trA"
^Y#[kh<0Pm`-:g%Xe4+?e,KDq;Yt$crbi/rrrD_ThtjY/cm4CWfR>:-nSgklS,WJX
l.5cKZF58?gf0"e?*fDCWrB]8H2dl<=T#4>,e_+J.tDgr0^2kLcf]?uX3.G8^De5D
,+.RHGP$j\Rlm/%e3EF\"8K!/OQ2\u!B_OMB@Yk!e%,8QZb10sXoACINcMa,2Ej+T
O&IML$tsS?#cSq<4-HTG@&/rW"K<Z08P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6
,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q
.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2
P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L6V$f`~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
