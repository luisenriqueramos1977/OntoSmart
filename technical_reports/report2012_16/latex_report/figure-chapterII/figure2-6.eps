%!PS-Adobe-3.0 EPSF-3.0
%%Title: (figure2-6.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 08:59:26 08/31/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 440 348
%%HiResBoundingBox: 0.0 0.0 440.0 348.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Administración de color de impresora/PostScript 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-08-31T08:59:26+02:00</xap:CreateDate>
         <xap:ModifyDate>2012-08-31T08:59:26+02:00</xap:ModifyDate>
         <xap:MetadataDate>2012-08-31T08:59:26+02:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:2558F86639F3E1118A67F5A7153593B3</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2558F86639F3E1118A67F5A7153593B3</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:d0e246af-776e-43c7-9e54-e1b5a9d046d5</stRef:instanceID>
            <stRef:documentID>uuid:8fa165a0-4a71-41c9-a9e4-f5672b150c9b</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 440.0 348.0 rectclip
q
0.0 0.0 m
440.0 0.0 l
440.0 348.0 l
0.0 348.0 l
h
W
n
q
440.0 0.0 0.0 348.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 440
/Height 348
/ImageMatrix [440.0 0.0 0.0 -348.0 0.0 348.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#Q\02\,uaU!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!3,YclgNEMMtOD<VKC&N6Pb_Q
e$%/qn\1H`mrRc8^6=V#ci4"*V=j<W!%e-Mp0SpA!(\F81r&R)eGfO@+9)=XkZk,[
HE[6g^:jOHje)Oqj8T,D"MaKTqY1!iQ@JcbO8f3U(FkS?HE[6g^:jOHje)Oqj8T,D
"MaKTqY1!iQ@JcbO8f3U(FkS?HE[6g^:jOHje)Oqj8T,D"MaKTqY1!iQ@JcbO8f3U
(FkS?HE[6g^:jOHje)Oqj8T,D"MaKTqY1!iQ@JcbO8f3U(FkS?HE[6g^:jOHje)Oq
j8T,D"MaKTqY1!iQ@JcbO8f3U(FkS?HE[6g^:jOHje)Oqj8T,D"MaKTqY1!iQ@Jcb
O8f3U(FkS?HE[6g^:jOHje)Oqj8T,D"MaKTqY1!iQ@JcbO8f3U(Fk825"83D/8Ceu
cfWg,j7bH0;q$6VV=j<W!%e-Mp0SpA!(\F9!03Dt^\kG<!82aLr?.T+rr@sQXkcYU
N)-b17#0j50G3g)hh(,I5K'%J%dJI5!(O'1At]/(=lbX[""920H&qlF^:jOHje)Oq
j8T,D"MaKSqY1!iQ@JcbO8f3U(L_O<^[Yb*CE^3Y6.Y5]ZVsCJ[Jp6\Y-2U)riKa[
8^8rdTMphUeVS\qOKR11QFWZcRJ!;SI+'&#chPo3!9.:HGWZo6l#?PTf#B=Tq!H6*
e[b$\mqk%CO-?ULn6V:'Z-rqYG=#kl\ZMpa1ks'7ptQAe*FJ+;8a'c;eLqW,VttO,
-;VhELU_X5e&PC<r]0<F^T-;DjRuIN!.Dh,]oURU`f%U.I:K"dl=3`l!6[`2?'Ub;
LP]Vd9>`0SL=a2EBG2kL^KLCb*BP(;gO@p_k;AXq/O&1_US8`K.W_ZS?X:_Dhc`VN
V@GT`X=D+K0@k^Hrj(>JL*e>K!7<*2%7KueS&[/HESJo&pZMK_b!-;^62pqr`Conp
=H,B@AH)YJiVroH,&X[YZ_;IkRu>cO$Z[<Em@q$Mb6q*oXTu[,7f(Z^qXooEVds\Z
YqMikRd:-sCOep4Hg7I<kl#o-&$.c9j,]"GpKSiUU4$c@c2D7aHuUl:reV#2;sN1C
$_h$3e8sDL9i3(/F.?KDX_W9H:udmb3-OpIYC+glVr[aqJ'&\.A9<=kXOI$TedQ=!
o'tsWjMu<+3epu)r?nJOWq@`$)]\79m5pbD^b'BfZ:F].qP`BRag+ZooJUpmb&EUC
eFWFnrrA(J5qM:\pCZ,fA,cPdZ.cL(qPX,R_?JP;`"2KbppP\8\t$HJO)9hmNRb04
_r+Iim[jY]iL)pj#Q//lIn\"s+9"23Q@IFpKjXi[*?VJ7q.K^-ZM=G"qE]I$]$F-X
Y5\LHa0Eq5q`ifJbQbgWG5WZCjKhT/eGd55F*^:22QJU;"+=grVR1^Ff^Yt*kA[GK
U]1<70<]m$BE%t;q#:?j5qi.X^:jOHje)Oqj8T,D"kp<\?2[:ZfB-Q7n$R98S-s`r
MTO?]W,QUCrMQn./#[rS9_N@J9^3AKqmG5-_t.i0pa:(%aV=@H!;Pf,HiF)h5Q-qh
rrCIRJ)dBun,EA=rrDb"+9)=3._SpK&(\IW\_.f1ZF9c5Kqn:B57P4'$N]UBD`-1q
a#??:#U&qpS-V2*l@8?PqY1!iQ@JcbO8f3U')qsP9C(L7=oSKg^-DUY>cL@ElG)l;
qY1!iQ@JcbO8f3U')qsP9C(L7=oSKg^-DUY>cL@ElG)l;qY1!iQ@JcbO8f3U')qsP
9C(L7=oSKg^-DUY>cL@ElG)l;qY1!iQ@JcbO8f3U')qsP9C(L7=oSKg^-DUY>cL@E
lG)l;qY1!iQ@JcbO8f3U')qsP9C(L7=oSKg^-DUY>cL@ElG)l;qY1!iQ@JcbO8f3U
')qsP9C(L7=oSKg^-DUY>cL@ElG)l;qY1!iQ@JcbO8f3U')qsP9C(L7=oSKg^-DUY
>cL@EoWP3#?[fG+YH=0T1TBP`pp^+VV1+CTSWqk%qjCAgoU7k;\c2[">Q4\]^7#!$
Tca/MH:]Pmj%KCP(O]*Z!($Vbp>1MGY,hJ7J)]prrrD7IrnGf1<0X2A8L5f2P"A8;
,a)&g8L0OrQCgYC[FY3Q^6_I1ZJiX*+cZK-c@L:#5lUft=S6OGlOHLsh#3ie7fNI&
k?kb%+W\^t/&oNMbck$&;splO")DUjfAO7NNW(B@ZZRk.B!n0jUYb#arr=dbY@Qn2
+/SUeKcMrbXC_JTUM'f.?--.^B.<$X:D;/@`@oc%Sf7OSB2GrQ-I]Ap%?4Y*%nl0#
2R-=Z`N'lYcjJDEq!tO4Qt/tR8lU-)D4NV[kB.->IPs?T\)Pu%($$@Y>-kId_n8]F
Z.6L43'g)QVjID`(;2LFT<#AB>8f*<l6Y'>OT,<%gds1FpaVor*tl;Wq`F+5#S^o\
j]>B^?i\j&5;gj7$69YUF^M)S*eDnH130UuH]B.r,7Ub+ELj:He.f7DeN_%XINCR)
YNc!!%agD]fhL,rgu"jW1Vl<JYG.5/CiJX2>/%1gA8J]dgi0P0nncj,r7n?$C$F[D
=4T!tJb5u,*AQtj*O9NDg\<L@rI='UF\f%sf8.<AS7aW**K1WjqTf9)<H%DSM4S\X
HI#]ie7WndNRfl#6.oIG`b9g7"/YZ/.ED;&f.?2Oip3Mm;2hZ\l>U-O*Xk.Qo+D!&
`XX;>+'3b@'glako'u#JqP"a<9B[C#rcmJqN/VNW8a0B')781&Fu\.bA0*RJhu<Zo
\Cl-j.gajQp>ifTb3aO)Blg_l;kQWG5l.JGg[n_>+-AVG8(YNV+0dl0J.Ld,g:DS^
p#rRGY%O][m>hh@aI$r:9H]$D34QugP%nF8JC@q?/qMbtiga`Z_>Z/DEk4%3U![!9
kN/p8/:527S\s\(.%aj-a'9JsoKJh&QJ=Qj*LWCT=aTi[Rd05MM,o)-FhXK(0tJ/q
kab'JP'2a9Ve]li^;nPI`Ado&WU!V-or+IWotTed6@#"YfpuW#>t?9*pFa:%rr?8l
m[NmATRC<oo+fpU/)AmQn[5NDQDd<'Ti/YF\W<``R$bsi:[OlcrG<;gC&\1&q<d"G
]A6,'M1N24.=[;h9W[]_c_CiFjB?Ju_3KW85]i1jFVMooY]M%jOn)-0,L!.MnTr3'
T3a<7,Mq=_du)>9^sO=NkM2Q0Fe5:\orFd.]Q]+jB:FWC90k2_fk__Q5HDCHlL3>#
q83&&o"'9f.&,>R0\GZ^e#)8e@91OllCE"^Y<hGIl.HpP3ulrnD9U_n92)n`r77D_
;$1=VPh[A[<KI-J#QB*DlKA.!rj$o#r.r6$0E2"l_k$#+m,,+fI^[_3J#PMRGbrb@
o'-#8fCEdTm&&`CV.5&cHjt7jkoRQ26e#K?/,WoLgZjmWYDZs0!-$t![?]As5;Ae=
5K5l+.ecrj0jeM[*!b<l)t@3c''\JR/H2Ek3[[sGhP5d"7sT.Ycbr+Q#pFDgchb]W
S`k?,^SG4K%?P#%r?Z!HO16eUXac7)XZ[bKK-0KF2LeAZn'H81qE]J^8])g/MQ-Dl
b3Z+i]38>,b?P;tjA]4/4_O'#6L4<1FZ`:`ET5>'fEpseh,g->rrDRHPud5MY@J$o
aN)"5n`8=#'D$nIO<*s^5%p+ee9Y1okr5,MV2](EKC`nn'CbNl;q.V+8L5f2P"A8;
,a)&g8L0Pn?fJQp!#L&>rr>AMp>5G)rr<eKpq,d_q@W`-[eHS\Q2WVTnTWL_!;%B5
!,^q)Wp7@=Qi8W6TDjKC!:@H-Pt=S>,a)&g8L0OrPHg1Rik!iMpD@[L,a*KS(S^k*
rr<bdH.t.SZ57!1Qud7OV6:ua5FOeN#m5<47n;c+?a!uKDO$1YLOO;pL:2H>a$@=2
lHf7!l1eI<^9H6G0+`TY>`+u"P]SPU(O:S\n9SCs0`$2+a.\)'`X!YN'!*LXOI`aQ
,GL&MBl6*lD5O09D0:B[J`HkV8L>lX,a(bt8L0I`P"?pq,dVR+Z?.^ho2\n/@aY/^
Z>HrGb/9eF.OXOW?;@%=Uu^Ao>E]oSrrCL&rrDmE_@i0MPunP^P33;3>]Oq/\2Xrs
6Q^[T!7#YQhtef4kl"!r>lM'tAFeF^1#)9kRb*!;j-Q2#&]>`XR,l<,#2IurJ*6:#
^[&NCb#^\)!&]'i[D2)H#J%SngF)(FPZkf&rEcDcFR4;CF^`>Z.H?^WA.cg%B6E'g
c_o8IS+3n=pn8e2^K3^ReM+i/opPg[P#WIK\jJZA(-)(ihsNlQ4/[W3(6CbZhsO#&
hq%]?a5G]j?g)G)*Cgk%$^cG4aOTr9T5iUd<A,`+Ch`l!/_qYJ5NuV'IPnV3OKA;j
cn,iB:<%MVD84k]h7p)e/!%O15mMuP^oI?'Vd]7'4"rJV(Lu5DlonU)#k#8'!;WP>
S,CMAU])Il.fTLIE)LU?\rC[?Y>E7aJEqW&5$*N4H"d_D<u?6EC2F\@Q;6/f)VrD,
%5fG+F+A[V`n%6h>g`GZ1_r(N!,@iWIL8I.#@#.H!0k&^XD$bO$QF'b!4M7dcf.k5
*.t*`-\utm'UCpAf'\*NnPtuAA@1UcjgET!IPqD;r/0*AReDN@LGde@"!EY^@0CHs
/#8>!.B.mHY^1/S2W@fHbf^IK%j\^3H1"7)dRb0&,a(Gc8L0HsP"?p`f'483VtFk=
@Wa5FACBqkYY9=pa?KjjT38qIl^PX>lHQqqVsJUJILNRX+2)up8]!qY.J\`\"#m+<
3tjfEj4qp_@nTVWJA.65T3&U"egsaXeS&fo4dHO.@I[j<$cfujIu@((om"5)#'9Wc
f@44,-"HodKCX^AAe0G]4DIG5Su!]q8L[4VP"L&(nQZ"nMnYVZ!21M3DgG!)MVn>;
o[!IArrCf#dRd(2!#f5>]BXnB&,uX<oIa-d?fOfZ!#L&Zrr>@b!;>9'b+tjZP"@)p
pI=A;9<[Ka"/\t5[G7>l_>DQ&@'BN,qP2P([HEKr?u*faK9;6c[>jbIGCX#ed!i.i
^T2Th$`6l?5JgNFI>>ee9pGF#eDksPrr<l60C$5faL!lZW0-PiE7(7WK?(rRBdBAt
SOukE8KaiTP"@)o,c^MYWI`K;c;.<NZrb$qji>3>)NouI9!;(VSNEZJlZF2)n_;fD
eGfMK]UtA*Z`80I[I*4$I`fQPrN"%Vj?.\;:ZhR[VhOenVW$;'QSI/rB3/YU+'-g;
MmRED.:Ig+eE@HS#E$h'`RVPcSHf/#UW-nneALFkLV;Ss'Da%nI_Bg%?^0$b4Wg`P
n0+CdI*1(eSl7)uL(W[!CCH&8@J%j9e(M&4)QEf9`ejTg<f&2gaX<cR,a(btk5)hk
l`U*-7mcGVd>Zg7NUF+Kc'l#XBL:r"/!k*QIuHKk>kZb+YWl3NdEdY7rm_.>?#QqF
?%#cP@':Y"VqUjor4GbJF\Zq,?X'G^Y&tejQ&G<rV=_?BS:&milU__;UIZmklb?B9
l9-tP?g5!T1I!eOg<+.Rq`o7i]SunaXEo,`>J@8GgB1Yc2RL0Y!MBNm;SO9pHIS%W
bJ^sG.DDi'qlG-LIc+(#6BXncPbaI6,r!(U+";rWR[J4lKNQUib-M$Ik1plW2KW2o
Ng0*ID%>An5'4MB[F.TrG8@6W0tgBK5>;'INE9/RF)E)`Y62_mrr?iK:pdfHeh3*8
S`sV?)gM3]f)o='4p@""pErs%LIpad;4qPugKZq%T16j#!*/EA"UqqdT9i!`B</P*
jsqNUH6;c@%p6\erMIYTDG(64*S`m;jf?hDY]Sa)k>Oa=<`OXpia+c0RIOdtpk8k@
ar?DAi'DIJ8L26R,a(_k8L0HsP"?p`Uq%%Z#EY*?.J*Q>Y2A6R(TW>a/qV[7B'SR+
4gj&6rRW\EbJ_Q=aF5II:8[<:f@KHp&AFfBn(-s,4YuD10fLpfSArN.9cB&s^\=1m
L.]gmT:Z`t]$Ek2*="dRS^a\tgKF>4]q!R,'h(`K,a(_JlG(;Vr\"%[re,dg^$-jB
.t@)5dm*ILrr?p)8L5nbBn,.2WW)t^5Q9Ea\Q.10NA(38ofrB[rrCf"(FkT4\%\eh
;9o$ke3;2Kkcq.CAE4>t)rNh`HNcd1oN^jd*D3K&JAUV(3kM^:5*Og`(XRY5H3P29
^6_np_AY7*[ND>UcRs6Sjha,ZS"oUl%Y]I@:?f0Dl)]AKa1IjgP-1UDLNKL@P!M]3
,a)&g;7>2WWV9Zf?$1b^]uC.>jH<RtDJrAJe4VLNr#UhOD][[(LOW+o.m?([kWmA=
;)I(SqT3Tb&*^i1C)NF>S[W,h`\e"sD]_QgpKE3'd2>tTm2i*>\qa*Hp7ft%YPC$,
_[#2)@U`hTA$ZgY[aRr[)TIRTmo-OGWG_T<(uH,H<q51.4AU,V,$?1krNaUrU/:_W
n%75ua'ZYIU!tXmG4sEMG,EC]!'/rlSqbC#=^-#iRQ_u>Ia4bh!':!orj0gsc%)VH
SV#<7L(iQ7r`#,mb/PFTcgua.Q&KsqL\j@s`5N]p=T6B4iaSKnXT&92,c3loE0e!U
JI0\!:;LqB6%Jt8,]3I:5I7A.o/9fSoj12dS[g%)'eJd0dQ44a\#A:dP4jm;FcDOh
Jg[DECAJ^On_mm0J'N!,-Mqe`9Y-ido"L;Pc>W5E9B#NgS^W/e"t_g`Tf"R,,^GIt
7mEd@^8P.[N\,N']c$)AM+2Yh1KZ1d2eh3&1[p*(h*ekKHAdRI5MA?8&2-:#"P2[h
(Y/M?e#sWK(c::.!<UEu"qN4L^un.TlZ2@gG3g7bM#9rFH45#hL!N!+E@Jd>]E6QD
H+GWLa(Ni*UZ+UkcGLa_S+8&(Br/HsUZ<-,=uZO)B_PT=i7RpU+8T$9)46HDk'cG)
4;'O&n"e<Z+YRcQ>^d.%]oU^H#N/O\#8\BGl%".cVrUT$HSq\d)<=QOrr>Yi9F?#s
GpQ9kRpXSP\9WEAr'Hl/W,^L$eGfO)YXd`j";/4hCasj+Ug\C2du`#$Wn*]/Nm"Ie
/9oe._RPaJV95j@ofe!CrEp^__AYA4dbf*NrRn,hrF)Gb.^lDCD:C_W='uMJfO^j"
i.XFH6#1unkX!]0Z+e2Lom4YirEjKFLuMck9-sn5Z&/<0r_E\`P6Y3<MrR"i<0F6/
qPG'2`,9/ppFr/@CP4j3+%_N3B*E-RflE6I,S[&;8L5f2P"A8;,a))]ormYQ:AWRm
EO(@tO]WtQ,S,$8r[g:Mn4pI?F8?,=\#/g&Cpp+4+%>S`k+;^hQX%kgYGp$"C[%bF
%;/MX"QN[-T)P4?JPUsb6aE<a8J<Hir&a8aa^M47S65JH63uWqWK?d[ij\pf(O\+>
!(&pDhXm!2!#<9D]BPsa&cVj>pS<t;r\VC[GLZWmoH4)5D<P6'"HWVHF9!qor+UZ?
n#?<ekWf($d&m<JMVkHCl^__PjgTC\:>92k)Eu(2)tJhNRMMgJJ&SnI7f?WV_^?am
T:?(NPKOj>N;b,Gkp2oKc)!uWOpY)Y,a+CcFk(!Mr/9D^Whu,rmP#R,W?k8ZR27sN
DIKMtNe`C#4H2PXEt?[u!/b4^b'Y=DBIK<OrM/[qNQK@ZW9B1`m!Ma,ZA:PGGCr,&
^O"T[Q*O(<N#r$";7bJdW]"#I@mg;]!!9=IHZKJ)1i9Fbnb[]@id@$4`'@..-MLbU
A7b"Yh6m!k_5HuGh%HdrCNlgihf&?a2*W8"<]JH>!lXrYf/*7lh)cFNA(?]k;7P!#
F,Lsb"O+7eU:5<o>jXaY3jp,2`T]ThE%8jfjitf[)W+Guk(t[5m6\@MeucsgabA)q
9li)TZI`8OgsXK`E0Z,UXHH.#Kd;gQ.7ke[D69eLSamfC8P?V=@,0cBG:Kri?Y?g@
[D0BBrr<%Rk<@L8ZfKuZ8P'nM:Y;ntTP<*-k]?];8Z(t6D[6-`i=+Oc1"i#B)K]i?
q?Q'XX$IrVk*ELY%YPig:EH'mSTek/7#aK1$FQ8p@/c?0)_q/:>aBZAbK1g7ZITC6
4.>+NK]$\^9Ytb9-OCLlQWrb*FAA6J;RNA#S-CZfkIAE6o.*"p:TdhW2_FttN*Dl4
[h)@W`m19<H1u^8rH5rtcKH#P7N3r"ZFk`jr8Ckh3(JB3]MGWb%jM7grr?l8[K_@o
?JsG>N`tQcA15a/+IX%C7H84glIE]H_gZeucb@QA5>^U]b3uEYROhj.k0GV/rrCTn
glA/VnFNrAFk>+b@/p:'^b0i,=*=HtlOR6I*E>6me2Zi?K'M"@&!&StlCV5D'Ra6N
oj+%UFu#.!a&p\Sf9%MV>)PO.C>q1Tmn=@8)"G#l3$-+?)XM%:D3_UoNY9r#a<Sf$
3=&%hdB4_PJ"hCoq04,_Pfm@s4;t=DR-stSeNMB[gJ)n$D1diSd"CCX#Y6Dm<GK7j
*[o/d*MmrSq)ci)9jHcBFR6Y6[roE;%EflBV\GN%/YfYb/H+0PY*%8>HI`qW`Kn=k
[\r?cXDcOhj2<+BI\B548Bc;/*g4EL+:b*$hCl"Gi>Or/1\"=S`Pa`jrrAMOb-Wg"
Op2\>2c7Mo3t:2lDeOJ;4:4-L]h'K4$;sG@P*D,$,c)cL8La6an[\<`>tFh<K$SjQ
1GQ!O\+=G3E*&7,W3;qsRV^$XU%MU;a0b>>i<1g)rj_o6J(:^8OjeG0c`)rbhREG*
]7i.'=K]e!L\S"O!6*hhrrCE,rO9Hc^Vt-j0)B5[KR`C&kpN0SnY-?dq:*1m:YEN*
q@>pcO/P2EF:YESf^BE$5l4"M!7lDAI%(LolhrX5\+np2'7h]Wf[$ib244$GT>>j]
O"&^,.3t'R.7keJ8lA5'k%2qkM0<c0[ad_SO$68DWQ"_WSUO:urEJNi/BQ+Rm&QWT
!um"WqTn-#eil8]"tb)Pm1iJc"'Rbj[:anoUA*2^=j@VGeK*s8*a)S>)ZEI_k,r=@
el@=N*j</mr.ah;X-fTs*tu7+NKpd$F"J9=&(.c`Y/C8>T+@@VY+u$t!$D^NnjtuZ
QR2=e]Sh*&e_9P1'O:"F$LKG%)Kt_]]'E@$cC'BYIP+Ao2q`mtX$Mn,\;6[g,/Qg1
-'=8<3`jn(SXoGO-h`9FS8,p^@.]kJHh@'aYL;cKBQ[$6`Wo#+qho[f>MVrLiH9N<
@;"3WddeAGO?mTB5oP?TFYBdY,HFs9fsSNE@l)T5mBQ"sDhPC5_$^+jDPW<2IH`;s
S+U]roW4+]@CFQo(AmO*_$A*M+_i3T,a(QHWR3"Ck6<cRg&\0PSF^Op7t5&o"SoT.
95+m.c?*fPp5e$>O5QhS)qAKDBUq2flJ-Vl*tk2okIX7*WG)!.U3,\5htt=Z:H/:J
qiIT+2ES>Kcaplq>O+(=CJX16foA:e4HFVq)ufn`^G))8gDK5B%!,_\,@1]qKkRtk
(3V<*<I=7QX*_,-ZZ()a^RB:G7WSh+N-d\.On^;KTsPSB;u3iJ3ji!I-Pj/DB,B.G
gD]P;%NX*rno=$DQ8G3?JrC@6#CTY]#Ve&>7M@KHD)kf>Z.;(2(P/KpUJ;B8@<><B
JW9[0D)_?WeDW67RoOU:VDc$>(rhAI=s*k,'[m3L.<Og<VNo<0[Tcn;_(BjZ=OoWr
30tM0"L6#=S,M:d"#5i.`V'623D&'ia6*uD1o*$-9ZOT]2TG7E#l1Aa/j:#Bo4tFU
Ol"r[eSHS)h8dZ^/FmYK][p&d3i>cWWaK+`C"b.W[H!Q8C<)Ah;1>V>90/\>%EnJ-
iOIoZZbjlWh=,C5.bX@>iYrX&2l!I;8LPB(,a(_k8L0HsP"?p`V<@jYj+!_M];/HX
k\T"(mC&/6Vs,Sek[&e?oc,m_%\Jr:n-I+7p$9Q+&.1-K5uZa7ij\pf(O\+>!(&pD
hXlpp`O.><rr<m\3:?WC5:MBIg+Na_#^lfNo_.2A21#9&:j4m`@kjb(g*n-<e_@/H
NC-4eO0"a(mWI0iPN:M&&+NlH*/E$A'Tu$7.7keJ8lFi$[6*dOI66`cF`'pgC!$PV
"V>)A!*R6gbG&7V:-WXm_:?,d^!3D?^nCH\[YMR\/pU?'NtfWhW0*b=rX-(ekqd@_
5FJsGr.L>H<pAN8VLFlc+$X^G(u&aMP"8JB,a+CT864e0ZaIO1p^cAIP+b)e[[;!G
pc&)s*,N+[a(bFG5b%fW%26Yj>o&h<N/b<]Lg]f'W-Vml?;$?IPpG<MKFWgt-)Tla
]R_!AglcU%J+\\A1k&9?/^#F(PG3T;8Ka12=Tmu@F;!!B*hQ<3j,9ri58Ke%Jeik.
XA9k^qk0[:kjA%/=k(u7dpPBd&WBkp(-92ZQMnc:.3Ll)"JZcEebnG2Xo7BqIc?>^
<Atr#F?B5&U&0u[2GmJk/8Y)&#l1>0fm#*1SPpVFa47!C=T$Y?a2%FM.DDk!24[5h
3YClgX-0ASSM[1+GQ^=jka=sgV6/4gq`1bX!/#WdpD%7?_:?"9`ofkMXIth0Q94eA
f%P$<3;mHa7@kT7Ui'W9QKY`B8(O\Hrf(eq3a[F"Al;,Be=GKSDFj:cKZ)8aKTP`m
AkkKl248$WCYF0+,nX!b;Fr-sP`eT`V'M3q.7keJ8pmZQV[f9s3iZ[T%)(8!^cMe]
?2R#^A#[fmr\uqjrrD;'XU"_;A:JntHh:Zs*g`Xaqfh?6Hi:,frrDDW1>#j`7*7.Y
lh-_TZOS"NqcNMMrqa3+'`MR,,a(a!;Fr-sQsF@"9pZskCifUVbn@RjWbh\8,#s`l
?^CS0?@5JNF,/[Sk?,(<ko$r/mQIKIM-41eX7U]K:9VPNWVDc9WuSA>MV7>:"^;f8
H+?nHcRl]Bg(8`XZE!'3(0-m].e_R\OR@SZ@:O:&JHQ#_K;^t*,_[M,Xc[=EN@[9@
oT/K0$d^<cX)Bm:Po+F`Gl/-,d*Vk:!"]gC@hBe@1Fl`VP!obV9Uu>E/T0=6i9`jA
I#?+8\\C_)r/^p^85__*Y01E7[Rnpq:0JG?,SEgE+It2[pTgYWa-^WC,l%QUe&aeO
;6>J.CG%gf*>*n*L`Gp^RfkqLDiY,%BN@H='G,J!'U1qI73Raj$6_qe'u>u![iALu
7NYCQ_oM<;6jc4:Ua)W[\_`&#A]*qTnS5:\FUc$GIBFKn_iRd8\^kYuh(>g#%h[L2
0Wtq=elXE(eiQ.D8p+Jcoo#;qhkD:g+!JONBr)uE'kY*jDYd+p]Ai3TdRaS@6Md1"
(=;S'Z&WN?&>kt<&lV`oAa[1qhBO(Qf\<Z&namf:rrBd8[Ej7n4)cuqrrCF=%%oco
Z-N>!Ti>VR7!Q"k,a(a!;Fr-sP`eT`V'M3q.H5ZcJc>]g^K9&J'P*F!U?%Rjg\kLL
cdO?J76'aS^moe(;H$Ylk`2`!qOcDia"L</Ha_Os>r>-1`]XfEnQq0e6gN<MqHs$D
am(aNG!3@D:QV<-r"lbNAC[*-<a>rQ=0]1fq)Co>au'>G.S1n\;NaTsPg\l?HJKZ(
YMR=*5#!>8oEtiY$`@)k3u4I'@ohGT?FE#(O78*L5L'BaDsEhdF:;oENlE`mGjmQ'
ec,X,<K:2Z_//s/krGH^/T?e>&:9"l9#ATF1X7#9$KLtA+4]4q5B-FYb3B_kf9'49
d4IS-4s:!?M_Q2#bqd.F]T1%SrWg[o2D;DcXLN:m*tkT\D%ZN:jVbA4p4D?_-8D2F
F#sQR8L3u0Uln:uFQo!^V(1(rCF7(""3Bt4;ksk;'3<R#W@:t9@4nTXh7qa<f)s(;
.0P<i(m)faO@YJ[>iG`%P&p^M1(-;jhmZhR=8a2HqF>^ULZXX@h+$2#1M3^t=[s"7
K't%9H7`rEC_bMZ[CQ>MN,MY#M55\n."re6:rk(6Kd>*V1($<8.0RMt1($<8.0S(\
a<5%NeE1>KRe2*!%k-B<b?^8O7OSe/6gR$'^YVm7\0S[6DVF:nmBCpB?pAo3,%JtJ
A5;<tmX(!?PR`sOCW1!OlSWJ7Grn\MM6#-h8KaiW*/)Hm4gil<*+1M(EBaIQ.AQPe
DSsf8r@_!hO+UbCr"h](^809@I9ah#g3osOjU['kFbB7eeOFl+q6G]"P"DZO8L0I`
P"?pq-)Z2)=T8A*]"MA_lL&P4L)oM>\puJ-ll0.N$'[oU:RV/bl9D\k`q)!ogL]&(
T_</@mV)NT/>)H=ipX(A29msKa<^SOHdYjDP_HllQi8W6TDjKC!:@H-^Ae0I?%;R'
7"7_;ds"T3Z?t*s,OR=s+7Z3-!/nRhrrA_l!;g\$bkeC5LEl*1>,/(F8ROV5B4ofa
Ud'_L*(#ng*0LdQ>oEFFB&^<aS(Je&%cF*1;P]II"Y"Kj+hqLP*Fkod,51-H%sm\X
R/YiF\qSFX@rL`%YL@g]d^M3oAY8$fX_pARE;W\F-,VItU*M9N8LNOdb1dhu3N[X$
*WqjQ+R0;UP#IF.?:GE'7NpYdAGQg!C\a"WM+:C_[GICpVV_"!U%o`:5>u)"miRp*
hZBf\<HbigXUcI^<;;0cpB?HuWHkt9=fnF`J"kf^&);ZJ^Q,7pbg!?eg)FEASPu3]
!1MtB86]K2P#TJ$`ZNL7b)c,GA+)fu:r.Y/]q9ZpQHF:mQ&KsqTB??keVlMrTB?=i
Prc#7UOq?@AG?6V+116Uo/59@oiP_m.4Md#ALt1CIAD=2d8`1epAY+O;^hsbNnf*G
W16@`Y$KAcq#f9qo0QDUNr79r2:0g<n_0SleiYFRr5VQB`!o0tFD1Z\r?\XO)-_:8
d)M*j&=UaU\,"#KH',;eSJ`$RX%3J4)IPr6TH"+XVL!Roo2\#G?V#Vq5@r#V%V,Jn
d\QV'hSS/dq5tE`L<R+).VJU\"YJ=9BX?bG%QO2a$1*m*+G\_NK&=+04!='RrrAGf
1s.u5#bK.iO?sB#G87BSDKPkH+cDNPk:bTO>@[1PVI=G#86j^PE=Es:6nsn<mD`Y=
4sNPs!1Zn(K9"Ekbr.Z'_mrnM!<>A*Jmji$(9;F+]3MhgJ'g&Ar6KM&X_Sl`J2O!5
#(\$^Rsc9#^Uup_-\T@I+&DlD]<e*g54rIt(9^4KQ1kAfM<,<PW?dWu8m,M)1*)G&
ZC=qef`5M[#:@Vhept//7Ete1oqr0"RX/HRIK'<;NqQB"nG5__QOHGV(1)n,)44NJ
@TW28XgO4B6mEt?Ur]?p8HgOgP"A8;,a)&lOoGEA:;?,Wj8E>Yd`c.c?3_OHZtMX?
+-h.Bem?%Lol$V_eM7CVK5F<\q[_(hq:@hm,H5;2T9eL6Z6!?H*tkBi*Gn7/rrC#V
r\"%[re,dg^$-jB.t@)5dm*ILrr?p)8P4\dNA(38ofrB[rrCf"(Fm#"nYQ6cMnZ+h
!20>lqeng_;H)hPihPh1Gbfajl?7$Ia%dY83]4sHan+l4AULr<3K=VY/TXU;1a%M>
^Z+/:_g\guNg8+1"0#cg!BM0e5<+-@G>Vn+:ltD8,a+-Z<I1Q<UT8M6qK>BU]nNfK
Y2uf."0/_k.XAe0q7#GD]+[+slj'%sOEiHkd=:lE"_k'aX>ooqSC[XO`+a?[U7S8]
Il`[>[fQBVcePn.ZFamh[5^=1!R,N4&9S++R&@tDl8N47U:NoASq].(gM:qMiPGrE
%<YH'=nJ,unK!M=<V#ZL6UR@1[@]nF^o,%s#6*/YNtA1OE1kf#/9onBr?dd`X9&[3
_*f1lKZ:UZoU+6X5UjQlP`P1@a-pfD!&T1GEJoc8VQp)^rQ'ON'U>-,2s@V-huHYH
,SIU^QmY0MVcitBWOnqtS;sDb$XH"#0UN&<Ei;jb5.BETG;lGZCpB\nDfihIpCg5N
26&pT?@b/Zc0I:HF`*Pp%7/mY9>fRM5d@YnMUkDfr"D`$9Uu>>P"?d]e##llQO2+D
kS107?g2hY&*@O\:[^NcjIXP%OQ2C\I&sPkdGR.;MQ15FMX(i#JR$;BP!M]3,a)%F
m)hA<*SK*m.\VRaq0!fj&*g>o^DdO*URWPjWP@g:K?F;pDQe[3U7c9d=ZXUUS$,NM
Denp634g?FZC`hr>e6b9R)ruoFPV<JC8@"a5e0H3P"JVD,a+C[mq$<XQ4VV((HKN$
!9BC1b.kr_f:_^7!387,^fiS>\VHCJM55SLd>nm94SSWjqVXQDF[;(Aj82%N>??N=
r9HSXEX="g!egb?=88ot!6*hhrrCE,rO9Hc^Vt-j0)B5[KR`C&kousRNA(38ofrB[
rrCf"(Fm#"nYQ6cMnZ+h!20>lqeng_;GrW3Z>qYi/'>i9eQl++R._@>No:EmPl%*&
0<`lRAtc^PjgB4lgSj%8#Nmnh`%K/Z]oS;)-1&anH`FNP#;PR!>"<PFJ*KQ!d)YFK
^6dI,gjI!KY9Sql4q@PC.&RQK2Yn%X,bn8_CL5UIi&RqDY%cAsF<I_aVSDE!CO0;Q
-`#idN!nJ@!U_c;HOko"+-Pq$1U(kFQ6j%$X;4`UG.jgEK@l4+puZRc+&rni<0fF+
<aS/7YG66LqNTWU@!*.%K=+d0m=WHjfiKCA+^p1a;Fr-kOQ>EQOo[buO.u0c<$!X3
G0GL>ZcCHD<AU)q!nRE<j:ph%a(;Q4QL8E]Me>f>0#`"[j?$EB!3oUHT1Our)ZKf&
bC9+@El@F?@lVQa<.R)g88slV8!9$Ue^@#7'"C](-UB@4f73]kkC6H[<%JQ\SOqJ$
edf0\)J`i8!3Q<PG5Vmdc@,sV;o>pH0r=Nt+mfI?*u1$tWEft+#+V=k!+ab$I+'AS
AT`<CV82>%4fo6##QAoF>TB=/J(02$D'MpcbN`G9H='\irr?kPK]3%^F"DAP!<@Nk
Y@ScIok1,ngm7'^*.q`e"4XmMDSO;5KIDFod$890n9*3W:5YB0,`kX_d-S?DK\53F
]D]kRgmdrVY@CB'9/QO7JLLUUm&m5SZ,*3["FBm42JJquNfSD%_%OC=2;Y1*h.Q1<
Ja`s0UtTOBFg@kOlPj"h.3t&_;Fr-sPd7m'IT;dEk^=K_:rmP;funB83ZF^SqkL]#
l?u^e/n[iAFc<K$Gadpqb+&Brj4U3t>!37ff?s-G^;H)$P4)=&.Gmb<rr<7abmHSD
GQeVFY)I9sT;?YRDNB?M:W3QM@ojbJpDmN5*thS\P#XGIUln:Q.3t'J8kDA(C8.V3
F5'uCNR)s1!!dO:nrKt=j$icmVb$Zmo#_BHm(oHg3$Q*<k+*?WCo6t%`;]fT!uP1f
I]qKb).lWJ&('iXB?.ro-7"aG1/=X0M'U3mPa'ROLnKGIP";S;^Vt-j0)B5[KR`C&
kp?<ZJ+7a35P-3#!,_0r,qJn-J)]prrrD7IrnGf1<RlSY0Do,K5Q(ie!8Df9.[$$Z
8L1,XP"@+k^8?C>*57B_FRH]O0*l777^gf2n',1Nds@Sj=2f&q9tcr/5DLr_j@<[n
A6M,,lOR%m]9G)I<UQjDT#7TM4<E>dA?gccd&Q!"&mS5_O7B-qHH9\W<$S;Q(`r;F
(SBd'\'9)hLB-Iu6.?LF+[eU8V%.YY-W7pi$T>84(5R#Pq+$!@gTAfuXPo5j*:1D'
4)*%'ap2NhNt2Kol`3_A[I#Mi%Vp_XUduX%+Z^JN1Loc;(?[F=[>hK$#I38lk*Z>n
i29_EoIcib?L4;bEGdRmlT/=K)a2J.cd4nu3d_NcDcjpBAbB-9S=6gs(?)Rac^R^K
0qu,cOe1>$=COXC,a(nhOrt>A:jWn>8PNt]IP]:3K3PujA+2g.(/mGeZ*k/J#X<Q8
P!fp@1kGb`3N)6Qrc4?Q>OESb@?F=gm6A_r/Mtag?))p7*E.\aGSRjlT\Cu@d;V<-
0LE#19NV0BS+70e'G"!Xm)\r75DhYnK"\o5C"0n1A+hPtg*qKrU\Cki!'$hCGUnEc
A>B]+:]!?u^@Ul7:-*h@rr<66`0:*qj7#hLMDKYiqGoG#e:-"Hd]i$JK3CmSgjF9n
)VRA@&8@fb%Pk0udgsX.q7:a1)[q/r87LX_r;Fu,G-N-G<g#ek9a"I*A("qI"lHu[
:YnrH8Hc"<P"A8;,RiK+5+R^SZ`S(%2nQ\o#*):G#q<*a14$B0AlH9Be`JdfVWiP.
[A+Xe]T8lg!!\,#a6Prm#,9D,dbW#+A_u;frX#Lk>m:cC+&'Xc*X,94ReUB?HqEa%
MMENt1leKFkek#:U@_,sND%//lgesUnoCh_b?s7V#Cu0J;Fsn9odeOT8KaiTOrd(]
(ppn".`PCc"M2b^CI%J;,pZWAJ*SaXqR)3$HDTSRKB^h?CjGMc<u:P1r,1M'[J55P
S+_cJC!1aYg\jU4?25;%BCu\iWKd>+Tl]cXZfsX8:V_2Y,]T$Id8omH>^s`u;u5$Q
a(41Op7H4a:9XXsKQHYAEiC=[!"AuDP"?jo,a(_JlG(;Vr\"%[re,dg^$-jB.t@)5
dm*ILrr?p)8L5nbBn,.2WW)t^5Q9Ea\Q.10NA(38ofrB[rrCf"(FkT4P"?pq,a(_J
8L0Hk;X"+^I=:t.ok:e8HbRm`%_1+`R30Q=hid.88:Yn_mf*8grrC&_e\8I0<^iXe
nsuJWoB[k#2KAK.lWWGaU$NrIE00!g&`d$:CNH1tFS`uLH,*g!37Bq9Dn`RVQZ/]Z
]-cF0<d.R-4[6#bZQZKT-ElQPWB2`6rr=A*[uo'XI2Dg%FKCSX]&#O<m*H\dr?Z!H
0;KD(dsBV;lP5>(AmJOk5Npl1[/NiMPpkt(S6I$,K;&;F9s"#8-N=)"S9BYJ0Rpr<
_u;7bQ-9`;e,#niV?Q=r&#@Q\m62%hLH"?2g<8bg<k:e"ZgAOXC!%Mf.ib"\+5:=T
.Tg`pBe<AQ"1'hM>HkiKFKagK?WtGkRqWRIJc0TTJ'9=IlShUNJrZY]\n1'r1Dj6B
J!49++2(GiOd<t#M%6g_X*ZF+ZDS'IG^B^;:X!LC3=8>'P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrPK/-iQ'mp1O/-7<k^)-#^O\j):"C!IA:a>$&dIWCPV:+Q(8H=YN2EKN
-eRA.O-s.QJ(BXXVB-sC<@@].Bbjnpae>.6m1jOQlBb7WXip!JZ`<+G;/TOlet;#&
4cT?'EmG$YWE^QAK1VV8W:bf-rER@u<sP[8!m1b=Cshs*!FP*K<cPD8)q6p6YNf9X
qDVb#/"cGk%r4BZf`3i5ZiC;\%0/t$Slnk)G$H3mP"?r<<0Bm)X8Qbr*=\h;/D@+C
T@&;%jGqu!,nM_@3iI8`;2\AVb-@2\hk^,h)U\.,be!9<k?ndtlLlYSJWZ/:`)]*Z
??t*cZ$!4_EP&5^=au&1L,OB9K0Z"_PJ2p`ec)h'NR!I2Ref'$:Jo1O#O:#/q"!m:
o%q(QX0-k]]@?,6%XS5B;Vu>.pb6FR=Xb`<!]qPs,a*24P"?pq,a(_J8L0HkHEZjC
rr@tkRK!8\+8]u&8UlWTr*As@r<WE'gO%@?9)el0?hh7uJ,0]U!4MMP<HV[/9E+u.
I8BkC62prYhM'+JV'M3q.7keJ8lA5+P*D,$,c)cL8L[2pA7T0%/]P'ffJn"k/O+JI
8L6N\8H/Z.^KS3VD0ZmQ5,Ro+JaSR.m=Mq[Qi9"V2F)%=[Oo"LO)sXc.jrDOjl=H0
QpgRFoS6-:eb+9j!W,)FRiFhbbCa+b/T`QpBr<;]:?F=sS]b=Ag3uLXq/d5XN`M_^
erQmq28RpN7j>Ii%HYhVfm_kJEHWe?h6$OEdPmY7%K/3&Y3\4Z@Xk>#2t0+W8c$hi
r=c,,T#(C:1:(3!*i2g2(Rapq!:d\oWtT8h]c>$%9oRftrMC,j"jpcY!058^&+YKM
Z%r;ZiVroNHP%=[Fss"iSFmB,NVtf1f^\k6QEnp;Ar]\P>'aIEDJO8H?/0!fqS;pC
<A?_Xf@9_QK6=Y4PM40Ln,2pjCu]qbqQ$(3.I*;@G78i9$3&-,3+p;kNMD"HX6U9_
^\Ou/G>IeFrrB'QELAf;$*NQb5Eb`4aAGYR=7aA!Yd-R_>?h+--n#T%VtFNJ,H'RY
rr>GFJ*4,e7l0!Oi:0DZe&-b3&>]WJ<'O9pXWRF08+gc0IS3"Gq3CW&[5WZp12i6O
qN'KCfV=)<[R_C"4s`MH:u,Dm)t@u>nN\0o^9%lb*:N3#H2P+M\*AInQCmt:[sqYn
j6h8O+*es><Pd[Pm^:I4b[$d"_Dr[15E]#Fork&&[iY9T]D$<GIAcRLg8CY:>^5m%
IP#Qq['1XeC:M8A[dC2jNUUV4p`OjGdOF,EH(idbVFHpn(G56rZ3tZArr@Wg6uF*t
m*DSA+&$,+?o^-+o<toG:fA18^Ic4g85)&+HkX@:(B%%K^)bbq1AZjqb:GO$rr?of
\+6YK/tIRBX7WVNlc3WM>=3&_7\r!@9;c8$E\aVm%X6RQr)Qj*f>"=&5b!(r&!#1%
eN`gMjMGI[m&+KA-,aDFNW0!YGlIck`^X>5?$h(miF9aNrr=(!e9(,G:P5jV,Ps"s
nt[ERd8-_gH^e5`=Q%TdiregX(SC[a^:7d2Wqu5*qupIFpqM.<1OA4dl6XJ42Z(D&
C[?%Zq6LCF&aEA7^%Ga9+'#m9k2kdWCi;1/I7O;;R`Sfi<;uq==I%&j4p.o0^p>3=
>"=BaA?R=O3+Id77D1ofrr<nn>5HE:<b6]JQUj!o%nmO^8C_c7HgGa#N\>I]/od&'
,c4-q!&d`<8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q4]hE\rrC$q9`G+>O8ZQ$,eq<:
r\"%[re,dg^$-f?e2mU0poim'=Ltp=B/_%j]CL,`D(htEH>IFb"0$S)Sh!&*!#\S4
^\97WJ(p4f!:Mu@"Hl^HrrDi:I9$:I\QqT%go(/PH.)]m``)0+rQ=CIp>nO9cFj6(
Pkk=Zr\C*GJ*pB7rrBMWrrCnt^[[QbX8`0?\qg6p:]Bsh5Y37cJ,]M-Vq#/OQ./%c
b('/V0DoBFWrE(SY+bjqDH$Q8]^*oW8PbuY!95O$=8q<(&,UC>rT?iR!#\S4^\97W
J(p4f!:Mu@"Hl^HrrDi:I9$:I\QqT%go(/PH.)]m``)0+rQ=CIp>nO9cFj6(Pkk=Z
r\C*GJ*pB7rrBMWrrCnt^[[QbX8`0?\qg6p:]Bsh5Y37cJ,]M-Vq#/OQ./%cb('/V
0DoBFWrE(SY+bjqDH$Q8]^*oW8PbuY!95O$=8q<(&,UC>rT?iR!#\S4^\97WJ(p4f
!:Mu@"Hl^HrrDi:I9$:I\QqT%go(/PH.)]m``)0+rQ=CIp>nO9cFj6(Pkk=Zr\C*G
J*pB7rrBMWrrCnt^[[QbX8`0?\qg6p:]Bsh5Y37a#Q?L9<QG'>l8jF3ec,W^lHLF1
VkdgP8*[ckYNfY!hoS4PP"AG"?dpFQoK*!P>P[A8ht9q`@@pLNB,u?"T8g3"bDNkV
OJ1?&)h+o"Z];ZJ5&SA)QP!$mDrqWR[sFD?b(&jufh!e.fI=[]eVo:Tf6X@:puCpS
+M[2aO6<_>Jag75q(\4*P#OLH4Is7HqQ%B$lhtYqIAqaF_M(V^!:`S+nkA+e/urp`
n#bK6*HrqW8pCmEA\P49%UW'4!4OEW!8_hTpr\"brrBT86iPl=rr@>rTHo\m5Q:`'
;sLRbb3C)BjZiXfQi8b4<IaF<;#^O).K9D)Fm',WVpGACnW`mNrr@)NL]+bZrpuud
!0!i+?i-,<5OHUCpRQU38La92!;pClWrE(SY+bjqDH$Q8]]jq+.J6dAj`M+2EhE<n
?@\22I/a3H!#\S4^\97WJ(p4f!:MsUpr\"brrBT86iPl=rr@>rTHo\m5Q:`';sLRb
b3C)BjZiXfQi8b4<IaF<;#^O).K9D)Fm',WVpGACnW`mNrr@)NL]+bZrpuud!0!i+
?i-,<5OHUCpRQU38La92!;pClWrE(SY+bjqDH$Q8]]jq+.J6dAj`M+2EhE<n?@\22
I/a3H!#\S4^\97WJ(p4f!:MsUpr\"brrBT86iPl=rr@>rTHo\m5Q:`';sLRbb3C)B
jZiXfQi8b4<IaF<;#^O).K9D)Fm',WVpGACnW`mNrr@)NL]+bZrpuud!0!i+?i-,<
5OHUCpRQU38L`]r#PbLd+'3cr*G5a)1<]3sltt(MYkj<$7RLluiVk8Y_'G8@P"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2
P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,aA</s4I~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
