%!PS-Adobe-3.0 EPSF-3.0
%%Title: (figure2-8.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 09:00:49 08/31/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 497 348
%%HiResBoundingBox: 0.0 0.0 497.0 348.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Administración de color de impresora/PostScript 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-08-31T09:00:49+02:00</xap:CreateDate>
         <xap:ModifyDate>2012-08-31T09:00:49+02:00</xap:ModifyDate>
         <xap:MetadataDate>2012-08-31T09:00:49+02:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:7536849839F3E111993B9048B0901334</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:7536849839F3E111993B9048B0901334</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1ede1a3d-30e0-420c-afdc-fd52d1707916</stRef:instanceID>
            <stRef:documentID>uuid:5c92ea14-b2aa-4a77-a67b-d92290d6386b</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 497.0 348.0 rectclip
q
0.0 0.0 m
497.0 0.0 l
497.0 348.0 l
0.0 348.0 l
h
W
n
q
497.0 0.0 0.0 348.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 497
/Height 348
/ImageMatrix [497.0 0.0 0.0 -348.0 0.0 348.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#Q\02nH/e9!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!:%.>ekW&kfD_iDB&/Kb`i?YM
4(7J.WeVAX&L2A=f2^?R"/Pqsq-iT=pf=Tro8L<RPh!OJi8WC(aLS^k$/0!!U&Ng2
?hYk=MWauErrC3%rr@sinQAIti=Z.DeZV/E`^EYM]s$h;Q2^i)=nnijDl%s=Q@:?A
8KYR)j_s!efKHG*cB\D0E`r16qer<\gm3C>MFfI/G:NL6]*GbB\'i%Z90X-*DKN)Z
P0_*e8L<^5j^3;"@.q@E3`l:%BB#9FcB\D0E`r2;!-7(^9@t9-^@NtnmkM0=F#SN9
`nRp\D=&gik<>kdPPpR>o'"S%Nspj2fZ,U(M0Dih,au88-:>*`WlCrD!NAX^;F%,2
hW!HOY\E5l3_E:A,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk6^dYOZWZuH
=NK3E,A8Bm]5A'#_@K8RW8E53qQ14HbD<U83'!-`Y_)6L\<9H^8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V(D&@Ip&fmNTcU.IRTP[V:V*;[XN;Q".J9>$Ul>*_Qs-5=@%06
EGgATa!tdKP*D,$,c)cL8L[4VP"JUmef*0\h+;r4YCi@rT?;tBQ2K*\j!t'/c\tFe
P"?p`q>UFdrrDW-f)Ga>X^Cne)0c%G!RcJqYk>d/.p)^q`a/TEA<cXL=b#O3rr<h\
ij5S\baY"h>.Nbun?dYMrrC3>r[jb]BB.kHCY=,U\V=M]I$L(+[OZZ;jKET*[h2F0
I\,jg#38!rm1sLZSGi>Y&,(HdHe@&Bo37+m>H!X\0'T+V=B01_iDFZ>:\D8P-ZoYr
dHUi!)uXsmTT''b\Ilg0nOX9T^5,5g;9(\'RIo3(-c.l;r(O-V(Kj\k=o@89eQI?D
(,b(<GWrCH\;6@EY6X!NSO.pH]!bc,jKu>>H\#[>R.9`7MLCadmY^G)F)kWKNn7L>
1m/+4!.TkF0_4RWWih]!m.sG98&\]AW)8]Bf4upSG*Y6+&\&T51(<A9MUjBZ!,?$#
eq+k*ZF\j&E%L"hbF'f!8.@mR+X<\$SV`NM23+ZPcZ[lqjhnA9"f/Nh6%TlF\bL8X
4jR]"I>,%op3@_V)r[KEParFZai$ZLGG4l0c;4-uMWiYPoh1gIm!fbtWqh*agVNg?
>!N^F5dN)OB]!h#i@Kq3frJG/Wd%M#<L'2$,L<ZUfbrJ,D445Ii"4Vjk6ADYR1gV"
Q@eN5M=?aog8aLcfGGXLOl[IAD2m>g,K49k<rV-nii_9mg-BV0-UNVf2r.bO*ak5W
aJnU]f1A(-%*$!,DUt#LDi09**o#CRdK#k/P"KXQ_6#=N!Ql54W;Z2#WS@fZi+be5
44:V4*VUhW8ZrYBk*ZBApK(MOo*:O#?puXW&4H-[5g3`o?nH(VhT74NbNaG_Z-n"6
hVcD?4$YeUSg,<2JTF?nGm`+f-C9;*)C21EC8:O<!f.?E*&RstZ[F?RESkf`W^TXR
^a,bIO]*6'k<U,^4a0t9L)G\D-'gUT(:94$TQr!F1$s=s1lXSMPhE@^ei,_,;#=67
^%`;pN@q(H,fn=^?Br:8n$rg)VM9,*"G5h^6_Y^iZ`UCJA&r/9,kaZ$qX%jW=Cr2O
el;n9-\NHd\ZL&57%X6%c"ij#m0(8V&lMN5;q^&Z79Q@cA:#?CK$jrS&]pg]$agml
<9pftM.)K&<%P2hpNmnnH[2Yo9lk)hE$J]R.4pjk\DC\>;&L*.L:,H*)Bi_#c4(3c
_)uI`9m-nH91T'R65HIcFHe#88+6E\'`A^7=e:nlf^H?c3_Xm:DW[>j7JBkd!Tj^=
7hc`e!>'D#T]S-"YSOU:3seJMfmQY>eiHDJS/Ti=BEp#Q.j!GrF%?jb+^2Ah97YO4
#q:_RU\DM)MUr(i3,/qsApRMWj1aWM9T#2J+9[qJpXI6#F.eR>m(0e8$o8g%R4PVp
'%W4&i$mWim<ab[>9Ypr9rGKUV8kh]6Q&jPrrCtVZ2lel!@3[@J#.'q475[8QlpoL
#?9tGl!$IC+-B,@.3t'J8jUW!Bts2'J*4fr+Q\)0htY@/oA^H]A<KM15(D"1r35k/
r$tkJH,a.i!+irfTDnmB4`C?#$J#.VSoL*Hfd/bAemJ5PrrC$EpoL<mop>YX5OiRh
.k+ZBnjT7=kEkq$CBkH>5,!7CNFR$EXuF,82g?T%/[i8E`rsps[f2AC]?e6&4F8KX
PB.d?Ks%Q4>gbf.`P"U>T3,ArgM(GX`rJD5JMIY[FH6toCma^SY)#9\Qg&hqPI<sF
dUW$[beek6jm<TNNn487A83.'C5t???E`(B:A[f2PIpI:7qD"Di<IN'=`k7[S!d1n
a"X-])p25Ge>e$<YrGlqf$ilSmLmkP+G%Xr@7^%G_#FC.eaAFP[K,hE@9pgpX!69P
)au<^CiO,(#QA@JKcBU&4cZ\_l8$pK>?9=d]q7a)DJF)([]YOu+9gGr2TjoMc#tqO
c-V*r72I0*?IN<<"p!M(4$akMKVTOk,JKX1&(N:QJ$JoQ7_-jF>ibnbA,*3d<m1*#
mLSHsP7S"OSKu3E]pNrW<r5[Z$FQ8Pf;rj2+_[a+P_U%1m+QoPFSR/[qJ6Yu"?XON
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;QlRXO+E4$
AlJXhBk_qLFat3\:TO-QqR953Vd)ktHZnjr/Nee!JI*dKGLgT!EQ:o"kug"@"rusP
R-1`0LY5=+]FPa]hP#Pa23#\U^$o4MmG)5i&D<W^`P8=!C<j[Z.k^`X;epe3o'-`D
^9aNf;hil5O6%jXI7nR/Fd.acmCs:X9,n7dFlR9J)n*g52mQ&%9"L;lcaLEj.spg.
(Gn6I,G!QQ&utU7]8MB&<_ZGSbH`Y<#,ehYCb[2liF:^;9/Z_LZtZAHN2nTZm<.&K
KAGs*rm,P!8*J7S@/Q6Rk)WEGlS=OS0b'Nff);'SE25E4P3;,Hmr\Qo8p[1tN,CW7
ef0B%LB@#ER?[m(E#S=NaeV(s$VcT`*s+AR?,'A1WNrc.!4-urq+f0peVF+3_778/
3WUl0-f+>q>o7ZdbBHj\er+OR&$p&b$B+Y5=p8biD3Fsd4&hI@:q!hqf%0us`ob>f
:BZA="0>RrJWZPHSAsSlF`(V38YD/9Nu1m2WV"Dn*gk`ApDYp[2VXF*rg2"6[NFeA
8&\MI7f'rP<c:du[UM<30$A*CQgY\il]PR4Z(sE.9gVHp3cA6=cbmcFobgEnlYVTT
a1$<L^kpT#=6hiZ,*,dQ+(9S7D'?\WqN#D;2#(rnO8ReEcDd;\0^HceQ!e&up7.e"
f)ap]X(tMC^EI:RI8]>gjBcTu/a^Wc*m_4SDYljhO&'g66Q@68nJn@&W;CHLofl5Z
kWq,Eg[#$5g?>5;<9_uo[jo%ZN=XFFDeNi4[$/Yq)tcuiq=tmEI?g(.j5f5\['s_,
S[u:r$H/&JmERbc5O*_sIPqQS?4f.s3uug-\5cpX>!6RVR'=TEhjR/a(YBYCr]o((
>\?"i:Yqe!Kk;u2VZn<p<\'0Kj%ndH!e+lKA&#g-kpa?q\Y7k(;lHo9Z)p-=!E)K]
8L0HsOE/+)Du=0Rq=09^3FC#ir\C\Tpr&Db,a(_pTCecU!%^9Orr<DVrrAX1Q[d\-
*@Ljeb7@hW!5c-nkF?,@Se=uCrFQ!/Pn3ds5DmThebqE7-I5a;QIta.gjB/Fls?%Y
!-,&<7kfleXd[`#jXD&K2(oT*mD!-&^\a!o?a4oarPkr]I!-q8[(DC<i_j']kkun9
37Z(Gq5ir,O/eQm[art&O3F[AT>70WEG-Og^?mQCr*F7RiHBA9Y*!R<[_-qAf7<"U
&:SA]B1'#)NgE3mG$#[Gg>TpoJal9C#5ooDeb<d%+,e>g]5Q?80E1!4QgA%Frr@&+
LV>hbIG.uIio>GkaK$)Hb_qM4<Z54mc<GO!;\,fbENBX5fQ;*./8i5NZ5Z?<VIP0C
pKH;MPDJ3gJ6]lJ;e1LFls\sJ>RI[$-a)c%l104\EaTuj*.<S!?E^3J99/9:!*Z]`
ik3,$MT2-qGTXnH\341$VuUh>"l8KfNuoR1B,PNl2_C@,boK#nC)a.K.9SfDX#m1i
@[Ck)RtZL-BrLeN8-6sS+D,k.^[QBB3ZU+6edH7TRdhsS\12N^e^@#7PbaI6,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`YnEO6rr>lk
P"Jg^:6J0t?m.R&,c)cL8L]X['sPC,%T%W/:S6F!O:/%/=sT6'<.<)AmM(oL["gIt
E($U$?m1L7O91S;;Fr-sP_58!dspC-rrCB(7R>2rBts2'J*4fsUramF8ppX=V#LGj
@I&F<<j2GmN4f7;rr>Xj!:n%YrrDPj?hrk&H3-]:8L0I`LLs"=,W=CZ_KZQ0"T@PA
Y('3bl;X3mfH(P.o9t&1;B)U#m@uHUarKQSQF*m`,Im;ND3^"V4I\'B&F,chI/F>b
ebU%g89qEQAiW'0S"t<k_.Jj%QP/?<FXli5N'l)?,S,J7Y><_CXF?6lF]'f*/T'CW
=mS9$YGk2Kl8RL@/ZL)k\<$&_lKZ*Yf;;j1ChMiYArL`hSI_4`W+oY?E03\1SPi)n
'g2JXK@EEUlPo_'h&JUe?:cA10p.=&Oq2O%RK!7eF)g=:L[>h:gcTtrXD"o/5<?Cn
I),u4=]G!=?4M<l-D9OFGgXFk'QV2'UIOYnLe&!qUPsE_rN@s)rj6:s`Hbgl<]&Du
Jar0'onTO,FZ3ep(mo)E]rho4,UVh?#PMO@ZM)#<?noYCpNKaHOtm,m[]s;X3=P\i
3piTiG'X\"?"E!.FSpoCM<FM+5FUWei)a"fo/50K>O+LiXC:03e'p3%o@cEb:W4rA
kgnq->5`OILZT\dhFSuWN<LSj8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c."u5qXhr,t$:ZpY5G>aju7F
(3DXRUo.0'7#hUs)ZKf,DtQW];FsJP,a)&eEke&]r+072nVG7H?d1P/19^WN`0?Z8
P"AHAoUl-`/3RqO!".9V!1n1sTJ&Oo5Q4c2hu4@krr>1A00i*$8L0HsP"?p`_TLPI
*F%5;f*HFmTS:J[c`3&$G#q?@eahupY&Eu\6L7VuA'$96j7Nc8nu`BA+a/?5CQ=s.
^V=b1k(3KpST!f<*CG!F,ZU&`E7b#8&"9crCD,DDPhIl0CU\Z6RXQrgc'gXIBq`5%
"W(8g9t@U=7//-0P,+74,qQD!SXiu'V:-o&,_%fJ!?V;BMJ*;:;\R#cJab``:&P0t
?X^P>HETH@]qkX,'D6^RO8DW2n1FY4hEX[7B=ArDZp#Y!+:<jp'^uUrSR&nf=n74@
$>Qe+^,<%,]PEu4cK:5;aBjDu7d'VJ51%aVN@rl>>j)h'bba\:j`1'U6_pCg&"iB-
FNh?Q0q3%1\uU(&*!h-Y-aL/s09>e,W85nilKuN`oMQV%f2]f@f$NWcQE[S\g>?qW
PP))Y3lX&]<Vj56MT,C!qeCRF5A+[PbCoSW+Hf!lG'X:X0:hdF-AOb:e5BuWE9[%&
I>50j_5,fZ&D'9Qi<Y_ICpj3gY+bQ4ms]=3*#ee+P3;[Rg7Pk0h[L2cdNk8]#'Kp%
CUVia6_$&j%gV@2@t+/cP+;`A<d.iM)_Vj@+(aU4Z%mE_>)BB4lfS`9)81Bk]\XNq
5rbO,iT&PkJksW;2pst0c,@r(ADp_8l6LoR)%nq8kp]1LP"JVD,a+CT8L1,XP"@)o
,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.:PQlVV]W2pS_X&!&4EQK$D[h
3pA'Er7aH959c7_;Fr-sP_58!dspC-rrCB(7R>2rBts2'J*4fsUramF8ppX=V#LGj
@I&F<<j2GmN4f7;rr>Xj!:n%YrrDPj?hrk&H3-]:8L@#%Uo@sK>[/ZQ2@D(F@CO[]
Nj\`b%GeFBSk?&9op_lP%$.`)<KphAR\!fG@p6p(-*MBZ%5Hk*STL/\T3Afp=`;3c
f!NtKENHOsrr>X!\i-hEmFhl/h.uHL.4O<J^:*\A1,9p&@^k_"@hl[3iSSFYV89m@
%drp5gC`7"=4ZfAJUNdE@IIi'Gs+dBg.1A.0okNenn6ahj&IGBENQ+STQt5+5('&:
A`;QV?^mEM.&jiGE>,#CW@@#A-+UM`B6E#u2S=r/AT*!5Qsb'>/T.BL#:lfSnM5**
BWjW7M^uJlbchOL:8?'1bkf`8E&+Q6aYpQZq[N6WVn0IY^HfNQ["0YTf1AE7CRQ7!
5nXIQ&5k+_`?d92!u!U83hKasgR9,E3"Z=sC"h^Z*XF1Y.7keJ8lCY"cE5?$[Q&jW
ka4Ml.3t(H*$0Zn=&QZ0oc/jp/@pnK4d8n/2TCq,pNtf.aEX=V0_)^q?UaVq`abV#
E?=81r=!K@$iqFRd3OmF$\#/'r!o(BRdb(Vf.uNI)o'rH4+?*`k8-_p8(C93b5<5!
[aU,hWj=E0ZEj!fR-j=C6ea.Ee.0Zu.\B]*%-a.W.I8]#)muOOT8H4!9SeMSSX"fP
V->!%Q.4[]I>3X8:]`U"ca$SRqQLpc/*Rc'`a;H"\[ank+MF*;j)\g'SIVXaqV@'F
gL$X^0-R)eGq47b#WjZ\MKl'p-9&?FeULS>*H8bH0t,a$hmV6A<kr=26">?2Nd3pc
l;b2fELi5QF`l411#6[VF5#66/V!$Y&`X<A/$);WNc.5JGP%Ju0etLJdbsj^5A=d3
a$pAVSHI*![$"!,.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rN5U$]32l=pW+)k&uraGg,"eE3A\bjfRXHJQmc+!PEngPi\,a(_J
83(&%2uYS9r:n3@*3\Lorr<p<rd80I9ThsmVpG38rrA?+\,QG^CB":[36TYbTCecU
!%^9Orr<DVrrAX1Q_5V#-9NYI,rdjnI=GG3W5"h#`dU&EWM/]u*s\?90Q=Vc4hXG^
JsoG):jpSK/T\hp/?PSSdsGS*SlXmVl$]YDljg>3%!`oVmcG%K+:s^-%l^5*Qf[lR
?7o1D].piUY&1S*1?OJQpK%#[K&6`A2l;"6ZR[3DAkV`fHXDW#?9i*S<I9.sVgiPo
CbiV%P#KJ4i:XZBTZk-OL\/%0A#dH>J[2c*o<0+HeWW't\F!=CSK15d,;:RdXnZ"Z
N4ar,0s3U=1K?*/G-^L2A^R&H!YSGVoWFbXMkr3WVIMfF<\="7Z>Qb$p=h4*TiH7;
h6,7NeRis,Mq,*oQVi%Jb.m=cj0kjpfj/jkZF3'lR;:lj40]#Zga5Tg':[H7ZTR(0
ds]o1AO?\I'-L57No8KD#M6Z%5"YIZ69j*`lai98@d?'W[^2*W?,/MeK43B_2ec=[
9/d1H8,Cujo5W+/Bk+-B`qut<n9JeZO#<!GHM.4_rfcL"=!)R+X(T$YZ,%kVN.$Mk
V#%_Dm/FD@F7rgZ5=OL:b1On-hsH-.\\#;kgbk,]Wq>V]Y/II@5B!5:d*2RY7!:)N
`p7uc[6;LdTXXT+pj7IHrr>&70U0)GI%o'^aX.0PC6XlQ,c)h_Tju&Y06[j<IK:`M
.gtZaUSb7*9r%1]Cf-Bc<IUf,gLCb;R94rD>o8sRnZ_un$2gWhPo$&05J?l-o6id6
oC:SqCO[i+;;HNl7rJ=,MEg&#qmBa^'/=<NgE.%mXFU;Rk#Y,EE$b]YjEN+&)Ce<(
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;U,<[*$cTJ+(qAC!a,Z7QOmPUTi=0j^O>!c8p#R`5i="eXHQj[jFF%hP`eT`V'+lL
1uJ)N^[pItOE/+)Du=0Rq=0:j1.`aST0MR)r`FL(rY;L6!'K9p5[JrgJ,HPD^\fT`
rcuLiJ<H.[8L1,XP"@)o,a(bt8L0I`R6"lCK/3jnl5bqK_"umA\3;%<(Thd!Nfru,
c+)%_gO(C?>e9p8eZq5\5*cr:)LXN`_=<@HK&q(Q[.QPi^5->8\/)Z[feMVqXE)3,
5+:HrAOW;Fe?_2WSoJ,E=:8HaW%oQG.^3u_6eZt(a?AU.9Tlg#/=PI=YGH?Bf(BNF
:/F!bYl=\N%3>5EMimk&T+8K24T-q]fD-C&>c;4h"Q^\kU?*Y`8W$DT!d)g=.H7qP
3B\%U3m9OoVHSC;(@eTVBce'oW:c+0VbL1P[@u+`G;m210!":C:A]62EF>98pXeH'
,N]dNTq04#(KZhTcPXf%*p,U=YFB%"jU<-OZHIIg7%LtcKRX`1OnFL0kL_3',*?:C
CFf6NJ!J0s>sHkGP6:NLj&7.`HOfI9(3Bb4rb,c\4mBmW<Pod0h4Bsap'b!Oia6J]
lX!8O3:j/_U(ijHB]L$K'-k%c8L0H5P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ
8lA5+P*D,$,c)cL8L[4VP"JVD,a+P.JaG"4#F$mHdJL\8;n^If:31M"BW6E_rrCsS
!_RP7%0<5TTMD5u9,^SO!i2!DP"?pq+Q\)0htY@/oA^FEEke&]r+072nVJ\M8L0Ik
5NtE3=F/m('s%?74QA([?@UCQr35k/r$tkJH,a0@P*D,$,c)cL8L[4VP"JVD,a+CT
%TZ;KGh1t\4"4lj[YZ[qd:.UOIZ=66rrAENnk%5^Vt,FR:I,?%:JSaM&X,Y,q735K
r`28]pZUMHJ,+`s!$mp/pZUMHJ,+`s!$n'gj;UQS<ij'8]f+P'n$=#-!:Fd\n*aBs
?W4P413)*nLA1kYhfHQGC]=C\IZ=66rrAENnk">WIZ=66rrAENnk)HE@Qb%h#gqdS
gRZ`5l,p_u.eK5;gsQ4;dDC.dY=5S\ZF8E'/U.a1aQg>1I<FbV"g2FT*lWYjqP9VR
f:oODX_#9X!+:BX!(dTo-;k/i5m_i_QTb?K4o.,*hu7$`!6HPe!'U0;mbe"OrrC.f
HT=<0U;P?R\aT@_dD'l)!:pHp8T1lmm110r!^:>(KV@u=/N^+[>W:4DTCr]f('pr/
dPK$pOSdXMZT@hU4\#d`Yr:0WfB.F@RZ;CI%/cu@B.,.hQBHMgO4.Cao,CPh;a&^(
0+XN?.q<@&Xai:2!!"tY.QnlN2l:#lY&&<nf6Fh*!-6Em69HL3>i's[-D)Q*O7?+i
dZgX`/s9p@;Gua+Pj'Vg,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ
8lA5+P*D,$,c35&Z%[sbJbC"p>`EgJ.Wa@c$D6'jr_M=4S':u9%3:*L;.2(e>^7G,
,a>*f8L5ej/,?(B!6/%=!1t*eK9cA`J)`$Y!7-Tq8WlXjPkk=Z8cJe]_q+hfn?$'n
k8ARIoDXsR!9K!<rrD"]^[o`+oE:DSP"?rK,a(_k8L0HsP"?p`d-JI;5&^?drr=87
-0`*er^P04!/Q-c?=^2/Ik87QjFbiO,a,He,a(_J8L0Hk;N'A8:HH@U*WH+)Hr;;C
L?j0KpK(j3f3=_K>P:P`5T`\n+4XUf>#"i<i3W7TaugAb[s;3qnelETWd8UZms"`K
Du&Sr!$[d-pUgFa2uN:I!0LO/8sd.Rm@UrIrR:J,VZ-XfpOCsfrrAX?ngT(7Hb\tn
J'U@T(!NJ?]0>NWSe'XABmO^nms"`KDu&Sr!$[d-pUgFa2uN:I!0LO/8UIf3YIWTi
e+T-*rrAYbJ)!Nn!1n]2.`M_EgTts8`&Q"L\_D<5'-Ag,O]VAqr3;%W!#e'F6tMc/
>25XF&IB$i5UUd&`2P/a.h6<W8L0OrP"?rK,a(_l84l535-T/^WI^O0D5.?63JVcd
VsOp09Ene$fZ=!PS!ir)Xq%G'NIc)WppO)UCg-@gN4;$QF15C<JCMT<.ICXl/!J!L
ghlo0p-W[%VqGe$W!>93)(Z_baI1[SZmr6Tc.0j?[gKa:B&9<V3q44Y1"=![TD"6K
k4g4"[ZH`-cSI5UFcN5dO41CM^rGX4rLM4k$a$_U%ON1Rf!J2CeLUX(F_kYmK6sUY
R!JJ:[bk;;QIV*E6O>h["&tNXkp?Hg:6Lj)8L1,XP"@)o,a(bt8L0Id>0g*PabfGd
rIB@mqj!(GCTYnaA$W0/p\s+JdSk.\CI<IP-VW""U#$n+kp]1LP"JU^=7]/d!0!uY
!'W+T#:oVIrrC&=rrAZ.P*7/S8La91PQ(XELTURViEF"fc8,"qkPZe.!6YmWrrBpD
J*3>5kQr\0,a(bt8L0I`P"?pq,a(_JU"=eTCu>#Cr^GsBdsCK\NLTqJ&H;aO]ZFC=
r`O_qIRo[+dP*)l_m7nBbH2R9[Yl^p#]S?'M's-]d<AF/a2)u`1!,n:OgGQ\g.sbK
X#DWt_gW.!A*e'/g;kiW'peN^rBk.]ZGU6_X20q`LA_oMB`pD?KcuIAA4F&4Zn+6r
8]WloZDLem9ju=3U^e$nRXS6=dkVkuEusW!^umC/cM&,/_gi=)Q$%l2@=;*U^g+p1
$`&)r!oi5!%rdrM?H,ol2:5W'7d][='CIrrM0@PmN$EV[%;WHC<f9&7jY`(me8B%b
7q2eKTs;1Pn],?=rf<5bNLT3SRo=>:6/SL1g]?6>4O]n,C#*I"VW>FF[q(#5O@IZ-
G0(c`6/>H%=R.k%(LrCkcd2YK46*&#Aj*Wm<fF-Dfp0p%G0+N'pX^d>>3L_^,JT,<
eG=U'/_bE5(U`5)XcA_S&d]Td`Vig4'nLKYFjM%EQcT\e4hJ/JSdM)fa`_7Aafku\
f)e<ai]I&N*oZpnI1mO-I4M+(odlP6._"d<5@a.l8IZ]anY3FTLQRB`[^WMm`N=48
5VTP61Ml=OFQG8_.<p??\:Ef0Y$#PCF0'@Fi`u\N&nOr'n'cbUrr=Fc`@\*D\+"1R
],/qj\uj/>]"<e/F(8!:Jcr&OJPKEhnf$C\WqS;'&'X\EgU7"=po9_[7dNskf%Q%L
8ZhDg053T[:hE`#eTEHnZQ_P0is0V(`%+l;$'Qi%FL1nZNfh5s[at+4le-infk#UC
B=H=gd=cmP4?IO;SRke"R_(,U^@,=o/rrU5BX($$mDjAp>njugmVhZO$:d$!0u.ti
ZMsn]5_:9L84[q(!.>(\aK?b]dpLLtptB4P?a9l$B_=R;=hF:6m?gk<ce=`QHQQ5u
AWQLW?!MpN+H`gaXcN,r?a[#kB59m9n-DXnY0<:.`JI*eh:iZoTmt6&J+9<)'gZ3j
?h22Yr+Q"^./_!-3IXR"!-J39TrBH>.o%j_8MWnD,fG85.M^]DTUOXU!J3fSP*.)Y
3_FGhVa75\QOEA)C9?jpXeqRG=(>#Lbq4.u$<XtL'+!_?='8DG%1e5B!60=Zo^pQM
&c/YG\o1<bcY[:SO'A\#\!LqO/ms*Il8:Kc/TqTiAJk4Dpr142(Ym`7f=8?h(7FNP
S[X#KkpN>eV)Fm0Z)nJGYV$Dog`PfuS^Ji`=nQF*fo;>X@Bm^.n$P=?_g=!:TK]]k
g.'VZSb:"fXi[aP;/7&9<[ClOQW2@D?E9W*CPQm3:lAC^l^;p)@Ui>obab-m*qre-
lMgicHQ(KpdrEdipuE]tf22=Mp4pC9Ve5"3m->M>=clX6(@;YRD.IK2bX)LMeIh[/
llA^Il^W^k5:7>o(-^:kD3'+Wp&#OT5-j;/Rq\n6=`qDEr,["`Hg5OF`]3oENEf5/
&/=$p];\k]:M'4Yd*/0&h_oe`(-Uc02q)c$\-Zl%i)3M$i8?g+O(5K!b:bUkOQO'^
aD>?C<mq39.7keJ8lA5-8P>kaHG<;#`QAqCB%E7M&.Z;HKh(j_;Z?_irr>L&gnL*Z
`/m:4E.K4iTd@n]g$2r/^Z`0(P5V`:^XE,^d;Sb&pP<uWbNb^9pcU4Q2H8ftOqg3d
?2U>.@t*+r?g3((\,2?eZdcb<rrCGbpEfR$G!F18YAEts1BD80e&VM</mn=u;Z?_i
rr>L&gm@E"V>ch\Mgr8j]Yh!U[X9-i--Q;@l<iejkdUGPrNk"gdsob`pEfQiG!F18
YAEts64R)g:&b3PX8`/`0kPNVTpM%-lL02aL(XUiXH*@gZG2lIr+072nVTk29NYIe
)GZGe-R&*\PQ(XELTURViEF"fc8,"qkPZe.!6YmWrrBpDJ*3>5kQr\0,a(bt8L0I`
P"?pq,a(_JU"=eTCu>#Cr^GsBdsBq)kkV>o,ar'?C3X'$1%+JM2u:=Naq_'[EJ,ZL
5h'\O,_-&n8Jgaepa,W\4;?[t`V]3&;shp*8gKOJcY%i:B=#E-]OCd6rM]FfqkXor
^Lsmh0=0?iQejFqr);uYpIZ\mrdadE5A.==6JQ?]fFcGO%l&sKS:8usF2*sHb0k4U
*sGU0GBnW%i*h/7o@Y9A!>tuFS,Ap51ZHj&NkH3.7n9;o>VXFhYSVU;[(&&5NsJ_W
gh_O-2o!qehH:7+-)CJkHbum[G'6#8RVgco97pU`$0UOSU,'%WfjM%><@5!rgUij#
<T8k9$cF;!Ll`BDr;7LNkucsGjkFSN!1PkJd+t1hDl4o1]B#f4:;j6kG"&TM.^H()
WK#NZB'G-`RG%@r`GH-Y\?`E[YjF"P5Frr9q:/EM-S!L%AVItgCYTGE1i6t&"Gq[!
6p8X)9WML-r#:Ee;+%KHGEt"r]`u$?C1;B-`()==jpJ5=D/c^:`!<c,!Sf17cd-+f
Z*tb)RBW&%a2SC=?2g[\06u@9)'ncE9dV`jA;:^DMI;;Vk.tEg?h22Yr+Q"^;V5"+
KKmX>TCJ]I'Vk712;&6hSKH6DPNZ`1>i=2")1erB<^p.r/TIs3OFMT$5No.(R"hHX
!1f[)fZK\p_A^hD-3DH6la0_Fa)A!HhVkLRm#//T]'#FXGkhJ""SmXkLnW_,+Frb3
ISOfY[Bu9mH%<ou56]GEd*-f=9/pUGO.,10^>*r/Pb"t5R-[\bC3:Wja6k&)Ru9+5
Al_JsU/'2?e"nR^rMe:2diZ)LEaQ3ML\c4D+5E[hb^1GJDmk$7S:KQ':f_F=!sY?n
G>PE#CN%61n"I.r0Z/hC(`JSg,kWd`rghr%pEoj6TDkD'IHE\M]s@8TVr7uB,9EO_
TK/U5G*q8n&YbOmGdI[4Bs,."L2:@(Zo_.g%4-(NW+R/iJ)6[^q7l1OpSIVOp+#dZ
dD$&%eip][XmE=IhT%@H3T%J8)P8k(Vr321)"c'6<(1Zt%Xkp&nm(A4ZT7^9rc(Tu
fq7Nqrr>$TpR(Y(i%J+f8lmD6bg5qTJ"0CsH"WW5rr>$TpR(Y(p<SBB8lE2Q[H.>f
VLSE\1!.L!g@P9;LYdgSQ$[/Uf-ImKZt+Z_J,.'*I4``n"YOd?OCXr..IbP:)QM0t
Nsh*%rrArUr[`LrZW<E"rgMa>Z2%#:<O2W)3A38[fI83rKU&^0r?REkA(ofq7gZF9
Bld?_pEZm"ZHCj`q\\HP;HkacW?MBsfI;<E/)JjiL;!$;@Wq,]CZ(c!J$BtZcUhF[
R*W1"*hu$Y\YaK&-V"r[;m=bFe/TDLS7c2n+XiF0V-U>t,a2-jrEoPkrrDi#q-(5t
^RK0>ARG9'M\GCU!;+>3!6(SQe[LhAgOJ65rrCB(=#kcma-gD/bag#B;QY?H!2TVp
q-iT=pf=Tro8L?`H2dk9rrDW-f)Ga>X^Cne)0u?V;Fr-sP`eT`V'M3q.7keJ8m,R#
C]7rcqX494Dlb%_J'?sQ!+"KD-=uu[r*MF/`6sf@[C4U79$kD$?UJgJgKm8&G*fEn
[f6=O8C:OVPiC_4qW'IErr>rj>@(YH+ua[?&[?MdcAbb`.8ON[<WaG'kSCS0a9L#S
3P2=Vi7J&d_L*-L?6p&kc)eMNZ/P$Zh\#3#n;)gt3CRcEaq`jFOPNV(>*[YhAmRi=
#23B%g71)/_'WDkh@il[Rmm>WBkq1XbM.)A)Hu+;AY;_j_:&)24E[cBiqdhIkt>O`
[&neUf!?[)BFQ#JAd4d4,':]Ae!FS")6o/Ejam;?hmuVresH907uEg4:&b4);Y8lD
V/2U!aCX%K?KX5P`lfkA-Zo?(J_:[MP/gj>Dm@5]nC_1^",?42gu/8d!d7YZ#3).+
:=%`FH?Oc%>D!!D[^562?`.b1K1>(,`-CT%U,mEl,0&>b"&H$E!:V@P7)p`q'mnoY
o^)P)Q_sc_h((uBWiC:XfI^T`E&pP\0fku)Of]m>Z#nLfhts6`oNn*<)q=C5*K=I*
=<6ZBS\&:q-ma'X48K.?r)5g&;IP)$la"aFc8a/NnU_\kK9:qKOs9#n+!1F^HBm/?
;'*'tc.m1k.N`TGrr>a=]iZUC)Z$h[LGL0J]t34<E;eD[pT2Q:^E)'H@:AaG+.DGT
:r4=5g%VF04/Z3:YI:nBa?#"`nRI]d+:jq"3HZ,/pk'U=[CIFVDU=JQJp8e^FA*0Q
a88K#:+&Q;>t.11GD+.gj_G5fR].$4hSSE%6\1?XfaMkZFI7pT9TA<hTBo5^h08\6
39[jSo*PED7/a$7rgg%g!,:A@VdbjF(\LgT]MX-tl2LbIchYWYduKL<rrCGrdWbGb
*i[W/ph'LSIb!]_!9p!Jrr@'sMu'E`Gd74.e%a:[dWbG`rKG_1!7:]mqpYPpl2LbJ
S,!!`Ec9[f5Q*;5O7sgoYNi.Lih=eHGlIaF54ea;rr?VPrrD[9mm#Zup:!it!),T:
rQ0N>l2LbJ8)/U)0@bPP*j6=!9'PC6$W#[YlCN/W4s&IJN6<\34DG-c19LQ-l2LbJ
IfoYl(Nhp0F`+2P93r`s5MUq*Z8=9>,Du-t%Pd180\4an5PJJ,X+.I%Im/KKjikE?
%rc4nBI@T.7uFR2e8k(e1&II;Y1+l[R!t8iRc=LsrN?/#m-Ghd%/Z1QXd(SA>=2RR
"+[^t]'__QgkM8gj3(J]/7jeNXhi7E&7nQL$#:G]5o[<SJ,3r1ilC.22/.45!9qc.
!/hq`XOU6&o9/]UNkooom1",f!W'0pn_fcO1-&N3ATh(5lEiZ3Md6J*TZB`[:gI;Y
;[]e&mM1mpGVQ"ck_shF4Vbrod!`@T!3ts:*![++.VDt$J.?pr)t[[)*sJ?E4XQib
;8'oX=rY^sE!3[;$bjqSET3:s]qDmFSp)7XQO2t("5nd_AMgdLkCQ+/\=&!.-qddl
X!]OG<jn=*_Tfm+\j4X6!EM#]j#,B8/XDT3PH,Z6&.XOi)=FXM3]*"'(LuL6Jltrl
FpBqfSmA/9]C:NGR4.RU[qQ'&5HFeadi\Si(4Ri8hH0;crrA"Yrr>5;@XVV_R/[0]
Zh[e5o"UZ4r+072nVZ3Wr7LTlF8;#qP"J`XTCecU!%^9Orr<DVrrAX1Q_5urks,/L
HJe]:X8`/^j"EYh8kC:k;NaTsPbaI6,q1+&8P3)L>5nSja8W]c+C!#BY&rHZUKpU7
/I&ZsG7lnX!h58b&d%uA$%d70,*LRX!1P!!pT"5n3<'!>;Z?`d*Cok(rr>%Y!9@.0
C4Eg!*pc+93Rq_Q:sVn;$QCl'1ag2W6.]<6Z&a(e>_[mb9W_+dZ.+8LYOdhS75+JA
e:2eJo8il>/e";.^!(iUEh?p/=DiJBYaO>(6CkY'gc!gUiOHT4miG5^9E&aM+5X'r
j8T+A9E&aM+5X'rj8T+A7tQ/H^!(oBSbB^YDltX1YRS4"0Ka_[Z9"Q0<!k9g9PPR#
Dr/m8.c:0Vl9Ds`q8`L8,+&5[l9Ds`hLG)FE+J<3B8Gk^T^JM@qY`A+/WHu%AiPX$
$8QP>h<7(8nIEn`"6()_r7L:!]iY$Mrr=70r7L:!]iY$Mrr=70##<1T\FF;b;0/k_
aLF7=5""@LJ1#7T%lIsZTieGAa_RL2\2isXY21'?Tu#MSP-P#e2EHof<W7"<!6D#:
!&cm!moB@,rrC-9,ENk=UF\f5JEOZs_W!$l]&CkC#,/,DP1:?0A2(:4Y_-.Q)<B9"
Bn+BfU\iSkS:C)YJ'F"Kqpg1dJ+>%-AF*=:O196_]%c&Tf5>[uT+@)'fDbi?*Cok(
rr>%Y!9@&X!1P!!pT"5n3<'!>:cRT`'TAF!S3b4H\EVnt0u)_9q%l3o!&cm!moB@,
rrC-CP7FM<NE%l&F_kheE?IT3$tU&f<fC2E)$nX$F1V5inN^SWTY#b=$R=$1r=f22
bs1!pkQrOt*-1&M@hYP8nihcbkhlAR:,2;M'g2KrA?NHuDr$3;-f"3:5I0AM!24o<
V(]/crrAaBq5&55Oo)B]iidF>jSm>eGc&gY8mc,Orr>E!q5&4j+nnk2`EqNinpb2m
rr>E!q5$=.o)A^:=oN,@=r5o_2\p_imV!lTG`Wm:[%?+$qlp%YYAj2\T<Vu-!2-[r
d\#l/TBIj+!&UjBmFXUYaSSD4M*".qgU;Jg9IUsO?l\3B!+5uNE.Au$B3shNg-*Tl
_qF1$_jgXVrr@(H@EnfP5lUhpC=2^0!m@laaEqoUc]iDfD0nOQiM#i"O]jX'j'-#n
Wn'?"e]_f[E1[[K?ZqKNYAj2\Tn/Y^^d%6[p3q5^#Q;iF<I0[-`5Zl=ds&3Pbb06+
`"GYh6=f_6QSm!,@tZk>#k0:.XF?e0Q?P3>2!SE7#-1fAU#X`7]UN3c_c0IO.@gVQ
'uiKuZt!I+@[7gUN^!->J^Q-jE43q_:HN>QI+G&p`\]Q'1_'N4-W@nc@Vk=1)3XU)
J,3r1ilC.22/dV$Q'7]#/Z>m11cO2\1-S-+rILI8ec"\2!$\,YNcLYG#?&,g!"E2O
QCmLPhqkR*5PZ#.?tTE2IsM%oaJSi;5BNf\4l!uATBm!DhQQB4q%USOB)_IQH2dlc
V<qgld]P"mEtVZ+YVUcT^V'RHjAPr-S,:b7kPkN+QaN%O9":YPbXlOJ^s2iCrq$-i
O\>BPDspd%TDXRQeGfMjX,(t$ec,X6O8f3<5F&9f/,?XR!6/%=!1t+,FM=**KokV;
/M/M*p6'Q\j;%Trk1fn9)-?fb@^Ue70VU'tPLQL%,a=3o5NtE3=F/m('s%?74QA([
>X(pHh*SmHX4@'+R+F80ghN<b9<3$2`)Vg'D3;2nC$rTdPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5pNFHTPD-V5U8P&ujbaX9Y+/<Y+<;TU:X,qP4$P#BCL8L5pY,a)&g8L0Or
P"?rK,a(_k8L0Hsa+_^kog-'/r;$qubhTk3Z7F!*Or7h__-<H2cp3?d\s/@V`S^>Q
3ntZ(D)c[pqo.J$/2ai[@:4F$kd@)LX*2<JbPJKpCo8L!MfCmBl7m(fc>2'9r(mFd
f[*+>ILE>N,s8&#eQf^=ZRq0U]$K(_cE=g19-$s2oSm`M*'p-?7d.Tgo=B-MaQbYl
>3W`(-Fs;LiqKrEE%blV)JUOYK'?0)9+DNjND5INQ8CbL&D>Vu8?!l2J;k1:P"JV_
kp3*g:6J4P,j?SNP"q04=X<5WV34T:8m)NPq54/l``<$=T,<N@P1&X2BI*G>SNI#.
8kM^=8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+
P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-s
P`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT
8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o
,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ
8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk
;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L156f`~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
